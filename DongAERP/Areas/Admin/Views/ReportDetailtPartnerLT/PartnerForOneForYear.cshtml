@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string NameUrl = ViewBag.NameURL;


    var listData = (List<string>)ViewData["listData"];

    string fromDate = string.Empty;
    string toDate = string.Empty;
    string reportTypeID = string.Empty;
    string partnerID = string.Empty;

    if (listData != null)
    {
        fromDate = listData[0];
        toDate = listData[1];
        reportTypeID = listData[2];
        partnerID = listData[3];

    }
}
<script src="~/Areas/Admin/Scripts/ReportDetailtByPartnerLT.js"></script>
<h1 class="h3 mb-4 text-gray-800">Chi tiết- Theo năm</h1>

<h6 class="m-0 font-weight-bold text-primary">@NameUrl</h6>
<hr class="sidebar-divider">

<div style=" display: flex; ">

    @*<ul style="display: inline; " class="search-item">*@
    <ul class="search-item" style="width: 100%;margin-top: 5px;margin-bottom: 0px;">
        @*<a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm search-grid-MarketOne" href="#" style="float: left;"><i class="fas fa-search fa-sm text-white-50"></i> Tìm kiếm</a>*@
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm print-excel-PartnerOne-ForYear" href="#" style=" float: right;"><i class="fas fa-download fa-sm text-white-50"></i> In báo cáo Excel</a>
    </ul>
</div>
<hr class="sidebar-divider" style=" margin-top: 0px; margin-bottom: 15px; ">
<div class="row">
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ cột Loại hình dịch vụ (USD)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationCompare>()
                                .Name("chartReportDetailtByOnePartnerForYear")
                                .Title("Doanh số chi tiết theo loại tiền")
                                .Legend(legend => legend
                                    .Position(ChartLegendPosition.Bottom)
                                )
                                .SeriesDefaults(seriesDefaults => seriesDefaults
                                    .Column()
                                    .Stack(true)
                                )
                                .DataSource(ds => ds
                                    .Read(read => read.Action("SearchChartPartnerForOneForYear", "ReportDetailtPartnerLT").Data("onDataReportTypeID"))
                                    .Group(group => group.Add(model => model.NameGradationCompare))
                                    )

                                .Series(series =>
                                {
                                    series.Column(model => model.amount).Name("#= group.value #").CategoryField("NameType");

                                })
                                .SeriesColors("#FFBF00", "#40FF00", "#2ECCFA", "#9A2EFE", "#FE2EF7", "#0000FF")
                                .CategoryAxis(axis => axis
                                    //.Labels(labels => labels.Format("{0}"))
                                    .MajorGridLines(lines => lines.Visible(false))
                                //.Labels(labels => labels.Rotation(-15))
                                )
                                .ValueAxis(axis => axis
                                    .Numeric()
                                    .Labels(labels => labels.Format("{0:N2}"))
                                    .Line(line => line.Visible(false))
                                )
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0:N2}")
                                    .Template("#= series.name #: #= kendo.format('{0:N2}', value) #")
                                )
                                .Events(events => events
                                    .DataBound("Report.gradationChartDataBound")
                                )
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu Danh số chi trả theo đối tác (USD)</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<dynamic>()
                            .Name("gridReportDetailtByOnePartnerForYear")
                            .HtmlAttributes(new { style = " overflow: auto; " })
                            .Columns(columns =>
                            {
                                columns.Bound("PartnerName").Title("Thời gian").Width(200).Locked(true)
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                    .HtmlAttributes(new { style = " text-align: center;" });

                                columns.Group(group => group
                                    .Title("Nguyên tệ")
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;background-color: orange;" })
                                    .Columns(info =>
                                    {
                                        info.Bound("VND1").Title("VND").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("USD1").Title("USD").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("EUR1").Title("EUR").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("CAD1").Title("CAD").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("AUD1").Title("AUD").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("GBP1").Title("GBP").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                    })
                                );
                                columns.Group(group => group
                                    .Title("Quy USD")
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;background-color: Green;" })
                                    .Columns(info =>
                                    {
                                        info.Bound("VND2").Title("VND").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("USD2").Title("USD").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("EUR2").Title("EUR").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("CAD2").Title("CAD").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("AUD2").Title("AUD").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });
                                        info.Bound("GBP2").Title("GBP").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" });

                                        info.Bound("TDS2").Title("Tổng Quy USD").Format("{0:n2}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right; font-weight: 700;" });
                                    })
                                );
                            })
                            .Scrollable(scrollable => scrollable.Height("auto"))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("SearchPartnerForOneForYear", "ReportDetailtPartnerLT")
                                .Data("onDataReportTypeID")
                                )
                            )
                            .Sortable() // Enable sorting
                            .Events(events => events
                                .DataBound("onDataBound")
                            )
                )
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function onDataBound(arg) {

        let lastRow = $('#gridReportDetailtByOnePartnerForYear tbody:eq(0) tr');
        $(lastRow[lastRow.length - 1]).css('font-weight', 'bold');

        lastRow = $('#gridReportDetailtByOnePartnerForYear tbody[role="rowgroup"] tr');
        $(lastRow[lastRow.length - 1]).css('font-weight', 'bold');

    }

    function onDataReportTypeID(arg) {

        return {
            fromDate: "@fromDate",
            toDate: "@toDate",
            reportTypeID: "@reportTypeID",
            partnerID: "@partnerID"
        };
    }

    // Change radio
    $("input[name='reportDate']").change(function () {

        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = $('input[name="reportDate"]:checked').val();
        localStorage.reportTypeLS = reportTypeLS;
    // Do something interesting here
    });

</script>
