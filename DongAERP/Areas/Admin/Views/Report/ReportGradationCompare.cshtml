@using Kendo.Mvc.UI
@using System.Collections.Generic;
@using System.Web.Mvc;
@using DongA.Entities;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string NameUrl = ViewBag.NameURL;

    //List<Report> listDataGradation = ViewBag.ListDataGradation;
}
<script src="~/Areas/Admin/Scripts/DateReport.js"></script>
<h1 class="h3 mb-4 text-gray-800">Chi tiết- Theo Năm</h1>

<h6 class="m-0 font-weight-bold text-primary">@NameUrl</h6>
<hr class="sidebar-divider">
<div style=" display: inline; margin-right: 10%; ">
    @(Html.Kendo().RadioButton().Name("TotalReportBody").Checked(true).Value(2).HtmlAttributes(new { @name = "reportDate" }).Label("Tổng hợp"))
</div>
<div style=" display: inline; margin-right: 10%; ">
    @(Html.Kendo().RadioButton().Name("DABReportBody").Value(0).HtmlAttributes(new { @name = "reportDate" }).Label("DAB"))
</div>
<div style=" display: inline; margin-right: 10%; ">
    @(Html.Kendo().RadioButton().Name("DAMReportBody").Value(1).HtmlAttributes(new { @name = "reportDate" }).Label("DAMTC"))
</div>
<hr class="sidebar-divider">
<div style=" display: flex; ">
    <ul style="width: 30%;position: absolute;display: block;">
        <span style="float: left;margin-right: 30px;margin-top: 5px;">Giai đoạn: </span>
        <span>
            @(Html.Kendo().ComboBox()
                                  .Name("gradation")
                                  .Filter("contains")
                                  .Placeholder("Chọn giai đoạn...")
                                  .DataTextField("Text")
                                  .DataValueField("Value")
                                  .BindTo(new List<SelectListItem>() {
                              new SelectListItem() {
                                Text = "3 tháng đầu năm", Value = "1"
                              },
                              new SelectListItem() {
                                Text = "6 tháng đầu năm", Value = "2"
                              },
                              new SelectListItem() {
                                Text = "9 tháng", Value = "3"
                              },
                              new SelectListItem() {
                                Text = "12 tháng", Value = "4"
                              }
                                  })
                                  .SelectedIndex(0)
                                  .Suggest(true)
                                  .HtmlAttributes(new { style = "width: 70%;float: left;"})
            )
        </span>
    </ul>
    <ul style=" margin-left: 35%; ">
        <span style="margin-left: 0%;margin-right: 30px;display: inline;">Năm: </span>
        <span style=" display: inline-flex; ">
            @(Html.Kendo().DatePicker()
                                    .Name("ToYear")
                                    .Start(CalendarView.Decade)
                                    .Depth(CalendarView.Decade)
                                    .Format("yyyy")
                                    .Value(DateTime.Today)
                                    .DateInput()
                                  	.HtmlAttributes(new { style = "width: 100%", title = "monthpicker" })
            )
        </span>
    </ul>
    @*<ul style="display: inline; " class="search-item">*@
    <ul class="search-item" style=" width: 27%;margin-top: 5px; ">
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm search-grid-gradation" href="#" style="float: left;"><i class="fas fa-search fa-sm text-white-50"></i> Tìm kiếm</a>
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm print-excel-gradation" href="#" style=" float: right;"><i class="fas fa-download fa-sm text-white-50"></i> In báo cáo Excel</a>
    </ul>
</div>
<hr class="sidebar-divider">
<p class="mb-4">1. Theo doanh số chi trả loại hình dịch vụ</p>
<div class="row">
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ cột Loại hình dịch vụ (USD)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationCompare>()
                                    .Name("chartGradationCompare")
                                    .Title("Doanh số theo loại hình dịch vụ")
                                    .Legend(legend => legend
                                        .Position(ChartLegendPosition.Bottom)
                                    )
                                    .DataSource(ds => ds
                                        .Read(read => read.Action("GetDataGradationCompare", "Report").Data("onDataReportTypeID"))
                                        .Group(group => group.Add(model => model.NameGradationCompare))
                                        )

                                    .Series(series =>
                                    {
                                        series.Column(model => model.amount).Name("#= group.value #").CategoryField("NameType");

                                    })
                                    .SeriesColors("#FFBF00", "#40FF00")
                                    .CategoryAxis(axis => axis
                                        //.Labels(labels => labels.Format("{0}"))
                                        .MajorGridLines(lines => lines.Visible(false))
                                    )
                                    .ValueAxis(axis => axis
                                        .Numeric()
                                        .Labels(labels => labels.Format("{0:N2}"))
                                        .Line(line => line.Visible(false))
                                    )
                                    .Tooltip(tooltip => tooltip
                                        .Visible(true)
                                        .Format("{0:N2}")
                                        .Template("#= series.name #: #= kendo.format('{0:N2}', value) #")
                                    )
                                    .Events(events => events
                                        .DataBound("Report.gradationChartDataBound")
                                    )
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu Loại hình dịch vụ (USD)</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<DongA.Entities.Report>()
                            .Name("gridGradationCompare")
                            .HtmlAttributes(new { style = " overflow: auto; " })
                            .Columns(columns =>
                            {
                                columns.Bound(c => c.GradationID).Title("Giai đoạn").Width(250).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: center;" });
                                columns.Bound(c => c.DSChiQuay).Title("DS chi quầy").Width(100).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.DSChiNha).Title("DS chi nhà").Width(100).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.DSCK).Title("DS chuyển khoản").Width(100).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.TongDS).Title("Tổng doanh số").Width(200).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right; font-weight: 700;" });
                            })
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                //.Data("DayReport.GetAdditionalData")
                                //.PageSize(31)
                                .Read(read => read.Action("GradationCompare", "Report").Data("onDataReportTypeID"))
                            )
                            .Sortable() // Enable sorting
                            .Events(events => events
                                .DataBound("onDataBound")
                            )
                )
            </div>
        </div>
    </div>
</div>

<hr class="sidebar-divider">
<p class="mb-4">2. Theo tỉ trọng chi trả loại hình dịch vụ </p>
<div class="row">
    <div class="col-lg-6">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ Tỉ trọng chi trả theo loại hình dịch vụ năm hiện tại (%)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationChartPie>()
                                .Name("chartGradationPercentYear")
                                        .Title(title => title
                                            .Text("Lũy kế 3 tháng đầu năm 2020")
                                            .Position(ChartTitlePosition.Bottom))
                                .Legend(legend => legend
                                    .Visible(false)
                                )
                                .DataSource(ds => ds.Read(read => read.Action("DataGradationComparePieYear", "Report").Data("onDataReportTypeID")))
                                .ChartArea(chart => chart
                                    .Background("transparent")
                                    )
                                //.HtmlAttributes(new { style="background: center no-repeat url(" + @Url.Content("~/Content/shared/world-map.png")})
                                .Series(series =>
                                {
                                    series.Pie(model => model.value, model => model.category, model => model.color)
                                    .Labels(labels => labels
                                        .Template("#= category #: \n #= value#%")
                                        .Background("transparent")
                                        .Visible(true)
                                        .Font("bold 12px sans-serif")
                                    );
                                    //.StartAngle(150);
                                })
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0}%")
                                )
                    )
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ Tỉ trọng chi trả theo loại hình dịch vụ năm trước (%)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationChartPie>()
                                .Name("chartGradationPercentLastYear")
                                        .Title(title => title
                                            .Text("Lũy kế 3 tháng đầu năm 2019")
                                            .Position(ChartTitlePosition.Bottom))
                                .Legend(legend => legend
                                    .Visible(false)
                                )
                                .DataSource(ds => ds.Read(read => read.Action("DataGradationComparePieLastYear", "Report").Data("onDataReportTypeID")))
                                .ChartArea(chart => chart
                                    .Background("transparent")
                                    )
                                //.HtmlAttributes(new { style="background: center no-repeat url(" + @Url.Content("~/Content/shared/world-map.png")})
                                .Series(series =>
                                {
                                    series.Pie(model => model.value, model => model.category, model => model.color)
                                    .Labels(labels => labels
                                        .Template("#= category #: \n #= value#%")
                                        .Background("transparent")
                                        .Visible(true)
                                        .Font("bold 12px sans-serif")
                                    );
                                    //.StartAngle(150);
                                })
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0}%")
                                )
                    )
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu Loại hình dịch vụ (%)</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<DongA.Entities.Report>()
                            .Name("gridGradationComparePercent")
                            .HtmlAttributes(new { style = " overflow: auto; " })
                            .Columns(columns =>
                            {
                                columns.Bound(c => c.GradationID).Title("Giai đoạn").Width(250).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: center;" });
                                columns.Bound(c => c.DSChiQuay).Title("DS chi quầy(%)").Format("{0:n2} %").Width(100).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.DSChiNha).Title("DS chi nhà(%)").Format("{0:n2} %").Width(100).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.DSCK).Title("DS chuyển khoản(%)").Format("{0:n2} %").Width(100).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.TongDS).Title("Tổng doanh số(%)").Format("{0:n0} %").Width(200).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right; font-weight: 700;" });
                            })
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("GradationComparePercentGrid", "Report").Data("onDataReportTypeID"))
                            )
                            .Sortable() // Enable sorting
                            .Events(events => events
                                .DataBound("onDataBoundPercent")
                            )
                )
            </div>
        </div>
    </div>
</div>

<style>
    tr.k-grouping-row {
        display: none;
    }
</style>

<script type="text/javascript">

    function GradationCompareDSGrid() {

        let gradationDic = $("#gradation").data("kendoComboBox").value() + "," + $("#gradation").data("kendoComboBox").text();
        return {
            Gradation: gradationDic,
            ToYear: $('#ToYear').data('kendoDatePicker').value().getFullYear(),
        };
    }

    // In đậm cho Grid
    function onDataBound(arg) {
 
        let lastRow = $('#gridGradationCompare tbody tr');
        $(lastRow[lastRow.length - 1]).css('font-weight', 'bold');
        $(lastRow[lastRow.length - 2]).css('font-weight', 'bold');

        // Tô màu dòng record có tỉ lệ tăng giảm
        let trGrid = $('#gridGradationCompare tbody tr');
        for (let i = 2; i < trGrid.length; i++) {

            let tdGrid = $(trGrid[i]).find('td');
            for (let j = 1; j < tdGrid.length; j++) {
                tdCellValue = kendo.parseFloat(tdGrid[j].textContent);

                // Điều kiện nếu td là âm thì tô màu đỏ ngược lại màu Xanh
                if (tdCellValue != null) {
                    $(tdGrid[j]).css('color', 'red');
                    if (tdCellValue > 0) {
                        $(tdGrid[j]).css('color', 'green');
                    }
                }
            }
        }
    }

    // In đậm cho Grid
    function onDataBoundPercent(arg) {

        let lastRow = $('#gridGradationComparePercent tbody tr');
        $(lastRow[lastRow.length - 1]).css('font-weight', 'bold');

        // Tô màu dòng record có tỉ lệ tăng giảm
        let trGrid = $('#gridGradationComparePercent tbody tr');
        for (let i = 2; i < trGrid.length; i++) {

            let tdGrid = $(trGrid[i]).find('td');
            
            // Theo % thì loại đối tượng tổng ra
            for (let j = 1; j < tdGrid.length - 1; j++) {
                tdCellValue = kendo.parseFloat(tdGrid[j].textContent);

                // Điều kiện nếu td là âm thì tô màu đỏ ngược lại màu Xanh
                if (tdCellValue != null) {
                    $(tdGrid[j]).css('color', 'red');
                    if (tdCellValue > 0) {
                        $(tdGrid[j]).css('color', 'green');
                    }
                }
            }
        }
    }

    function onDataReportTypeID(arg) {

        let value = localStorage.reportTypeLS;
        if (value != undefined) {

            reportTypeID = value;

            // Change giá trị cho group radio
            switch (value) {
                case '0':
                    $('#DABReportBody_0').prop('checked', true);
                    break;
                case '1':
                    $('#DAMReportBody_1').prop('checked', true);
                    break;
                default:
                    $('#TotalReportBody_2').prop('checked', true);
            }
        }

        return {
            reportTypeID: reportTypeID
        };
    }

    // Change radio
    $("input[name='reportDate']").change(function () {

        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = $('input[name="reportDate"]:checked').val();
        localStorage.reportTypeLS = reportTypeLS;
        // Do something interesting here
    });
</script>