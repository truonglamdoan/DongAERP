@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string NameUrl = string.Concat(ViewBag.NameURL, "Theo ngày");
}
<script src="~/Areas/Admin/Scripts/DateReport.js"></script>
<h1 class="h3 mb-4 text-gray-800">Chi tiết- Theo ngày</h1>

<h6 class="m-0 font-weight-bold text-primary">@NameUrl</h6>
<hr class="sidebar-divider">
<div style=" display: inline; margin-right: 10%; ">
    @(Html.Kendo().RadioButton().Name("TotalReportBody").Checked(true).Value(2).HtmlAttributes(new { @name = "reportDate" }).Label("Tổng hợp"))
</div>
<div style=" display: inline; margin-right: 10%; ">
    @(Html.Kendo().RadioButton().Name("DABReportBody").Value(0).HtmlAttributes(new { @name = "reportDate" }).Label("DAB"))
</div>
<div style=" display: inline; margin-right: 10%; ">
    @(Html.Kendo().RadioButton().Name("DAMReportBody").Value(1).HtmlAttributes(new { @name = "reportDate" }).Label("DAMTC"))
</div>
<hr class="sidebar-divider">
<div style=" display: flex; ">
    <ul style="width: 30%;position: absolute;display: block;">
        <span style="float: left;margin-right: 30px;margin-top: 5px;">Từ ngày: </span>
        <span>
            @(Html.Kendo().DatePicker()
                                                          .Name("FromDay")
                                                          .Format("dd/MM/yyyy")
                                                          .Value(DateTime.Now)
                                                          .HtmlAttributes(new { style = "width: 70%;float: left;", title = "datepicker" })
            )
        </span>
    </ul>
    <ul style=" margin-left: 35%; ">
        <span style="margin-left: 0%;margin-right: 30px;display: inline;">Đến ngày: </span>
        <span style=" display: inline-flex; ">
            @(Html.Kendo().DatePicker()
                                                          .Name("ToDay")
                                                          .Format("dd/MM/yyyy")
                                                          .Value(DateTime.Now)
                                                          .HtmlAttributes(new { style = "width: 100%", title = "datepicker" })
            )
        </span>
    </ul>
    @*<ul style="display: inline; " class="search-item">*@
    <ul class="search-item" style=" width: 27%;margin-top: 5px; ">
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm search-grid" href="#" style="float: left;"><i class="fas fa-search fa-sm text-white-50"></i> Tìm kiếm</a>
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm print-excel" href="#" style=" float: right;"><i class="fas fa-download fa-sm text-white-50"></i> In báo cáo Excel</a>
    </ul>
</div>
<hr class="sidebar-divider" style=" margin-top: 0px; margin-bottom: 15px; ">
<div class="row">
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ đường loại hình dịch vụ (USD)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.Report>()
                                                .Name("chartReportDay")
                                                .Title("Biểu đồ đường")
                                                .Legend(legend => legend
                                                    .Position(ChartLegendPosition.Top)
                                                )
                                                .ChartArea(chartArea =>
                                                {
                                                    chartArea.Height(550);
                                                })
                                                .DataSource(ds => ds
                                                    .Read(read => read.Action("LineChartReport", "Report")
                                                    .Data("onDataReportTypeID")
                                                )
                                                )
                                                .Series(series =>
                                                {
                                                    series.Line(model => model.DSChiQuay).Name("Danh sách chi quầy").CategoryField("ReportID").Color("#FFBF00");
                                                    series.Line(model => model.DSChiNha).Name("Danh sách chi nhà").CategoryField("ReportID").Color("#40FF00");
                                                    series.Line(model => model.DSCK).Name("Danh sách chuyển khoản").CategoryField("ReportID").Color("#2ECCFA");
                                                })
                                                .CategoryAxis(axis => axis
                                                    .Labels(labels => labels.Rotation(-45))
                                                    .Crosshair(c => c.Visible(true))
                                                )
                                                .ValueAxis(axis => axis.Numeric()
                                                    .Labels(labels => labels.Format("{0:N2}"))
                                                //.MajorUnit(10000)
                                                )
                                                .Tooltip(tooltip => tooltip
                                                    .Visible(true)
                                                    .Shared(true)
                                                    .Format("{0:N2}")
                                                )
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu loại hình dịch vụ (USD)</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<DongA.Entities.Report>()
                                        .Name("gridReportDay")
                                        .HtmlAttributes(new { style = " overflow: auto; " })
                                        .Columns(columns =>
                                        {
                                            columns.Bound(c => c.ReportID).Title("Ngày").Width(200).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: center;" });
                                            columns.Bound(c => c.DSChiQuay).Title("Danh sách chi quầy").Width(100).Format("{0:N2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                            columns.Bound(c => c.DSChiNha).Title("Danh sách chi nhà").Width(100).Format("{0:N2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                            columns.Bound(c => c.DSCK).Title("Danh sách chuyển khoản").Width(100).Format("{0:N2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                            columns.Bound(c => c.TongDS).Title("Tổng doanh số").Width(200).Format("{0:N2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right; font-weight: 700;" });
                                        })
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .Read(read => read.Action("ReportDay", "Report")
                                            .Data("onDataReportTypeID")
                                            )
                                        //.PageSize(10)
                                        //.Read(read => read.Action("SearchReportDay", "Report").Data("DayReport.GetAdditionalData()"))
                                        )
                                        .Sortable() // Enable sorting
                                        .Events(events => events
                                            .DataBound("onDataBound")
                                        )
                )
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function onDataBound(arg) {

        let lastRow = $('#gridReportDay tbody tr');
        $(lastRow[lastRow.length - 1]).css('font-weight', 'bold');
        $('.k-pager-numbers-wrap .k-pager-numbers').css('display', 'none');

    }

    function onDataReportTypeID(arg) {

        let value = localStorage.reportTypeLS;
        if (value != undefined) {

            reportTypeID = value;

            // Change giá trị cho group radio
            switch (value) {
                case '0':
                    $('#DABReportBody_0').prop('checked', true);
                    break;
                case '1':
                    $('#DAMReportBody_1').prop('checked', true);
                    break;
                default:
                    $('#TotalReportBody_2').prop('checked', true);
            }
        }

        return {
            reportTypeID: reportTypeID
        };
    }

    // Change radio
    $("input[name='reportDate']").change(function () {

        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = $('input[name="reportDate"]:checked').val();
        localStorage.reportTypeLS = reportTypeLS;
    // Do something interesting here
    });
    
</script>

<style>
    tr.k-grouping-row {
        display: none;
    }
</style>