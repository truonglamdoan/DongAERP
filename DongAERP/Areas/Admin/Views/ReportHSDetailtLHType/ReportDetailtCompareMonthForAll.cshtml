@using Kendo.Mvc.UI
@using System.Collections.Generic;
@using System.Web.Mvc;
@using DongA.Entities;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string NameUrl = ViewBag.NameURL;

    string monthYear = string.Concat(DateTime.Today.ToString("MMMM"), " ", DateTime.Today.ToString("yyyy"));

    string month = string.Format("Tháng {0}/{1}", DateTime.Today.Month, DateTime.Today.Year);
    string lastMonth = string.Format("Tháng {0}/{1}", DateTime.Today.Month - 1, DateTime.Today.Year);
    string monthLastYear = string.Format("Tháng {0}/{1}", DateTime.Today.Month, DateTime.Today.Year - 1);

    var listData = (List<string>)ViewData["listData"];

    string toMonth = string.Empty;
    string toYear = string.Empty;
    string reportTypeID = string.Empty;
    string marketID = string.Empty;

    if (listData != null)
    {
        toMonth = listData[0];
        toYear = listData[1];
        reportTypeID = listData[2];
        marketID = listData[3];

        month = string.Format("Tháng {0}/{1}", toMonth, toYear);
        lastMonth = int.Parse(toMonth) == 1 ? string.Format("Tháng {0}/{1}", 12, int.Parse(toYear) - 1) : string.Format("Tháng {0}/{1}", int.Parse(toMonth) - 1, toYear);
        monthLastYear = string.Format("Tháng {0}/{1}", toMonth, int.Parse(toYear) - 1);
    }

}

<script src="~/Areas/Admin/Scripts/ReportHSDetailt/ReportHSDetailtLH.js"></script>
<h1 class="h3 mb-4 text-gray-800">Chi tiết- So Sánh theo tháng</h1>

<h6 class="m-0 font-weight-bold text-primary">@NameUrl</h6>
<hr class="sidebar-divider">

<div style=" display: flex; ">

    <ul class="search-item" style="width: 100%;margin-top: 5px;margin-bottom: 0px;">
        @*<a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm search-grid-comparemonth-forAll" href="#" style="float: left;"><i class="fas fa-search fa-sm text-white-50"></i> Tìm kiếm</a>*@
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm print-grid-comparemonth-forAll" href="#" style=" float: right;"><i class="fas fa-download fa-sm text-white-50"></i> In báo cáo Excel</a>
    </ul>
</div>
<hr class="sidebar-divider">
<p class="mb-4">1.BÁO CÁO CHI TIẾT - DOANH SỐ CHI TRẢ THEO THỊ TRƯỜNG - LOẠI HÌNH CHI TRẢ</p>
<div class="row">
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Doanh số chi trả từng thị trường cho Danh số Chi quầy (USD)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationCompare>()
                                .Name("chartGradationCompare")
                                .Title(string.Format("Doanh số từng thị trường từng loại dịch vụ \n {0}", month))
                                .Legend(legend => legend
                                    .Position(ChartLegendPosition.Top)
                                )
                                .SeriesDefaults(seriesDefaults => seriesDefaults
                                    .Column()
                                )
                                .ChartArea(chartArea =>
                                {
                                    chartArea.Height(350);
                                })
                                .DataSource(ds => ds
                                    .Read(read => read
                                        .Action("SearchColumnsChartCompareMonthForAllForDSChiQuay", "ReportHSDetailtLHType")
                                        .Data("onDataReportTypeID")
                                    )
                                    .Group(group => group.Add(model => model.NameGradationCompare))
                                    )

                                .Series(series =>
                                {
                                    series.Column(model => model.amount).Name("#= group.value #");
                                        //.CategoryField("NameType");

                                    })
                                .SeriesColors("#FFBF00", "#40FF00", "#2ECCFA", "#9A2EFE", "#FE2EF7", "#0000FF")
                                .CategoryAxis(axis => axis
                                    .Categories(categories => categories.NameType)
                                    .MajorGridLines(lines => lines.Visible(false))
                                //.MajorGridLines(lines => lines.Visible(true))
                                )
                                //.CategoryAxis(axis => axis
                                //    .Categories(monthLastYear, lastMonth, month)
                                //    .MajorGridLines(lines => lines.Visible(true).Color("black"))

                                ////.Line(line => line.Visible(false))
                                //)
                                .ValueAxis(axis => axis
                                    .Numeric()
                                    .Labels(labels => labels.Format("{0:N0}"))
                                    .Line(line => line.Visible(false))
                                )
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0:N0}")
                                    .Template("#= series.name #: #= kendo.format('{0:N0}', value) #")
                                )
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Doanh số chi trả từng thị trường cho Danh số Chi Nhà (USD)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationCompare>()
                                .Name("chartGradationCompareLastMonth")
                                .Title(string.Format("Doanh số từng thị trường từng loại dịch vụ \n {0}", lastMonth))
                                .Legend(legend => legend
                                    .Position(ChartLegendPosition.Top)
                                )
                                .SeriesDefaults(seriesDefaults => seriesDefaults
                                    .Column()
                                )
                                .ChartArea(chartArea =>
                                {
                                    chartArea.Height(350);
                                })
                                .DataSource(ds => ds
                                    .Read(read => read
                                        .Action("SearchColumnsChartCompareMonthForAllForDSChiNha", "ReportHSDetailtLHType")
                                        .Data("onDataReportTypeID")
                                    )
                                    .Group(group => group.Add(model => model.NameGradationCompare))
                                    )

                                .Series(series =>
                                {
                                    series.Column(model => model.amount).Name("#= group.value #");
                                        //.CategoryField("NameType");

                                    })
                                .SeriesColors("#FFBF00", "#40FF00", "#2ECCFA", "#9A2EFE", "#FE2EF7", "#0000FF")
                                .CategoryAxis(axis => axis
                                    .Categories(categories => categories.NameType)
                                    .MajorGridLines(lines => lines.Visible(false))
                                //.MajorGridLines(lines => lines.Visible(true))
                                )
                                .ValueAxis(axis => axis
                                    .Numeric()
                                    .Labels(labels => labels.Format("{0:N0}"))
                                    .Line(line => line.Visible(false))
                                )
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0:N0}")
                                    .Template("#= series.name #: #= kendo.format('{0:N0}', value) #")
                                )
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Doanh số chi trả từng thị trường cho Danh số Chuyển Khoản (USD)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationCompare>()
                                .Name("chartGradationCompareMonthLastYear")
                                .Title(string.Format("Doanh số từng thị trường từng loại dịch vụ \n {0}", monthLastYear))
                                .Legend(legend => legend
                                    .Position(ChartLegendPosition.Top)
                                )
                                .SeriesDefaults(seriesDefaults => seriesDefaults
                                    .Column()
                                )
                                .ChartArea(chartArea =>
                                {
                                    chartArea.Height(350);
                                })
                                .DataSource(ds => ds
                                    .Read(read => read
                                        .Action("SearchColumnsChartCompareMonthForAllForDSCK", "ReportHSDetailtLHType")
                                        .Data("onDataReportTypeID")
                                    )
                                    .Group(group => group.Add(model => model.NameGradationCompare))
                                    )

                                .Series(series =>
                                {
                                    series.Column(model => model.amount).Name("#= group.value #");
                                        //.CategoryField("NameType");

                                    })
                                .SeriesColors("#FFBF00", "#40FF00", "#2ECCFA", "#9A2EFE", "#FE2EF7", "#0000FF")
                                .CategoryAxis(axis => axis
                                    .Categories(categories => categories.NameType)
                                    .MajorGridLines(lines => lines.Visible(false))
                                //.MajorGridLines(lines => lines.Visible(true))
                                )
                                .ValueAxis(axis => axis
                                    .Numeric()
                                    .Labels(labels => labels.Format("{0:N0}"))
                                    .Line(line => line.Visible(false))
                                )
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0:N0}")
                                    .Template("#= series.name #: #= kendo.format('{0:N0}', value) #")
                                )
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Tỉ trọng chi trả từng thị trường cho tháng hiện tại, tháng trước và cùng kì năm trước (%)</h6>
            </div>
            <div class="card-body">
                <div id="chart"></div>
                @(Html.Kendo().Chart<DongA.Entities.GradationCharColumn>()
                            .Name("ColumnChartStackCompareMonthForAllPercent")
                            .Title(string.Format("Tỉ trọng từng thị trường từng loại dịch vụ \n {0}", month))
                            .Legend(legend => legend
                                .Position(ChartLegendPosition.Top)
                            )
                            .PlotArea(plotArea => plotArea.Background("white"))
                            .SeriesDefaults(seriesDefaults => seriesDefaults
                                .Column()
                                .Stack(true)
                            )
                            .ChartArea(chartArea =>
                            {
                                chartArea.Height(550);
                            })
                            .DataSource(ds => ds
                                .Read(read => read.Action("SearchColumnChartStackCompareMonthForAll", "ReportHSDetailtLHType").Data("onDataReportTypeID"))
                                .Group(group =>
                                {
                                    group.Add(model => model.Serie);
                                })
                                .Sort(sort => sort.Add(model => model.Segmento).Ascending())
                            )

                            .Series(series =>
                            {
                                series.Column(model => model.Valor1).Name("#= group.value #");
                            })
                            .SeriesColors("#FFBF00", "#40FF00", "#2ECCFA", "#9A2EFE", "#FE2EF7", "#0000FF")
                            .CategoryAxis(axis => axis
                                .Categories(categories => categories.Segmento)
                                .MajorGridLines(lines => lines.Visible(false))
                                .Line(line => line.Visible(false))
                            )
                            .CategoryAxis(axis => axis
                                .Categories("Chi Nhà", "Chi Quầy", "Chuyển Khoản")
                                .MajorGridLines(lines => lines.Visible(true).Color("black"))
                                .Line(line => line.Visible(true))
                                .Labels(label => label.Font("18px Arial,Helvetica,sans-serif"))
                            )
                            .ValueAxis(axis => axis
                                .Numeric()
                                .Labels(labels => labels.Format("{0:N2}"))
                                .Line(line => line.Visible(false))
                                .Max(100)
                            )
                            .Tooltip(tooltip => tooltip
                                .Visible(true)
                                .Format("{0:N2} %")
                                .Template("#= series.name#: #= kendo.format('{0:N2} %', value) #")
                            )
                )
            </div>
        </div>
    </div>
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu so sánh chi trả từng thị trường cho tháng hiện tại, tháng trước và cùng kì năm trước (USD)</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<dynamic>()
                            .Name("gridCompareMonthForAll")
                            .HtmlAttributes(new { style = " overflow: auto; " })
                            .Columns(columns =>
                            {
                                columns.Bound(Model.Columns[0].ColumnName)
                                    .Hidden()
                                    .ClientGroupHeaderTemplate("#= value #");

                                columns.Bound(Model.Columns[13].ColumnName).Title("Thị trường").Width(200).Locked(true)
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                    .HtmlAttributes(new { style = " text-align: center;" })
                                    //.ClientGroupFooterTemplate("Tổng")
                                    .ClientFooterTemplate("Tổng tất cả");

                                columns.Group(group => group
                                    .Title("Chi Quầy")
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                    .Columns(info =>
                                    {
                                        info.Bound(Model.Columns[1].ColumnName).Title(month).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound(Model.Columns[2].ColumnName).Title(lastMonth).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound(Model.Columns[3].ColumnName).Title(monthLastYear).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                    })
                                );
                                columns.Group(group => group
                                    .Title("Chi Nhà")
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                    .Columns(info =>
                                    {
                                        info.Bound(Model.Columns[4].ColumnName).Title(month).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound(Model.Columns[5].ColumnName).Title(lastMonth).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound(Model.Columns[6].ColumnName).Title(monthLastYear).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                    })
                                );
                                columns.Group(group => group
                                    .Title("Chuyển Khoản")
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                    .Columns(info =>
                                    {
                                        info.Bound(Model.Columns[7].ColumnName).Title(month).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound(Model.Columns[8].ColumnName).Title(lastMonth).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound(Model.Columns[9].ColumnName).Title(monthLastYear).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                    })
                                );
                                columns.Group(group => group
                                    .Title("Tổng")
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                    .Columns(info =>
                                    {
                                        info.Bound(Model.Columns[10].ColumnName).Title(month).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right; font-weight: 700;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound(Model.Columns[11].ColumnName).Title(lastMonth).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right; font-weight: 700;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound(Model.Columns[12].ColumnName).Title(monthLastYear).Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right; font-weight: 700;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                    })

                                );
                            })
                            .Scrollable(scrollable => scrollable.Height("auto"))
                            .Sortable() // Enable sorting
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .ServerOperation(false)
                                .Read(read => read.Action("SearchReportDetailtCompareMonthForAll", "ReportHSDetailtLHType").Data("onDataReportTypeID"))
                                .Group(group =>

                                    group.Add("MarketName", typeof(string))
                                )
                                .Aggregates(aggregates =>
                                {
                                    aggregates.Add("CQ1", typeof(double)).Sum();
                                    aggregates.Add("CQ2", typeof(double)).Sum();
                                    aggregates.Add("CQ3", typeof(double)).Sum();

                                    aggregates.Add("CN1", typeof(double)).Sum();
                                    aggregates.Add("CN2", typeof(double)).Sum();
                                    aggregates.Add("CN3", typeof(double)).Sum();

                                    aggregates.Add("CK1", typeof(double)).Sum();
                                    aggregates.Add("CK2", typeof(double)).Sum();
                                    aggregates.Add("CK3", typeof(double)).Sum();

                                    aggregates.Add("TDS1", typeof(double)).Sum();
                                    aggregates.Add("TDS2", typeof(double)).Sum();
                                    aggregates.Add("TDS3", typeof(double)).Sum();
                                })
                            )
                            .Events(events => events
                                .DataBound("onDataBoundGridCompareMonthForAll")
                            )
                )
            </div>
        </div>
    </div>

    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu Tăng giảm so với cùng kì theo từng thị trường (USD)</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<dynamic>()
                            .Name("gridCompareMonthForAllCompare")
                            .HtmlAttributes(new { style = " overflow: auto; " })
                            .Columns(columns =>
                            {
                                columns.Bound(Model.Columns[0].ColumnName)
                                    .Hidden()
                                    .ClientGroupHeaderTemplate("#= value #");

                                columns.Bound("ReportID").Title("Thị trường").Width(200).Locked(true)
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                    .HtmlAttributes(new { style = " text-align: center;" })
                                    //.ClientGroupFooterTemplate("Tổng")
                                    .ClientFooterTemplate("Tổng tất cả");
                                // so với tháng trước
                                columns.Group(group => group
                                    .Title("Tăng giảm so với tháng trước")
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;background-color: orange;" })
                                    .HtmlAttributes(new { style = " text-align: center;" })
                                    .Columns(info =>
                                    {
                                        info.Bound("CQ1").Title("Chi Quầy").Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound("CN1").Title("Chi Nhà").Format("{0:N0}").Width(200)
                                        .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                        .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound("CK1").Title("Chuyển Khoản").Format("{0:N0}").Width(200)
                                        .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                        .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound("TDS1").Title("Tổng").Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right; font-weight: 700;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                    })
                                );
                                // So với cùng kì năm ngoái
                                columns.Group(group => group
                                    .Title("Tăng giảm so với cùng kì năm trước")
                                    .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;background-color: green;" })
                                    .HtmlAttributes(new { style = " text-align: center;" })
                                    .Columns(info =>
                                    {
                                        info.Bound("CQ2").Title("Chi Quầy").Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound("CN2").Title("Chi Nhà").Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound("CK2").Title("Chuyển Khoản").Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                        info.Bound("TDS2").Title("Tổng").Format("{0:N0}").Width(200)
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right; font-weight: 700;" })
                                            //.ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,',0')#</div>");
                                    })
                                );
                            })
                            .Scrollable(scrollable => scrollable.Height("auto"))
                            .Sortable() // Enable sorting
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .ServerOperation(false)
                                .Read(read => read.Action("SearchReportDetailtCompareMonthForAllCompare", "ReportHSDetailtLHType").Data("onDataReportTypeID"))
                                .Group(group =>

                                    group.Add("MarketName", typeof(string))
                                )
                                .Aggregates(aggregates =>
                                {
                                    aggregates.Add("CQ1", typeof(double)).Sum();
                                    aggregates.Add("CQ2", typeof(double)).Sum();

                                    aggregates.Add("CN1", typeof(double)).Sum();
                                    aggregates.Add("CN2", typeof(double)).Sum();

                                    aggregates.Add("CK1", typeof(double)).Sum();
                                    aggregates.Add("CK2", typeof(double)).Sum();

                                    aggregates.Add("TDS1", typeof(double)).Sum();
                                    aggregates.Add("TDS2", typeof(double)).Sum();
                                })
                            )
                            .Events(events => events
                                .DataBound("onDataBoundGridCompareMonthForAllCompare")
                            )
                )
            </div>
        </div>
    </div>
</div>

@*<style>
        tr.k-grouping-row {
            display: none;
        }
    </style>*@

<script type="text/javascript">

    function GradationCompareDSGrid() {

        let gradationDic = $("#gradation").data("kendoComboBox").value() + "," + $("#gradation").data("kendoComboBox").text();
        return {
            Gradation: gradationDic,
            ToYear: $('#ToYear').data('kendoDatePicker').value().getFullYear(),
        };
    }

    // Tô đậm cho Grid
    function onDataBoundGridCompareMonthForAll(arg) {

        //let lastRow = $('#gridCompareMonthForAll tbody tr');
        //$(lastRow[lastRow.length - 1]).css('font-weight', 'bold');

    }

    // Tô đậm cho Grid
    function onDataBoundGridCompareMonthForAllCompare(arg) {

        //let lastRow = $('#gridCompareMonthForAllCompare tbody tr');
        //$(lastRow[lastRow.length - 1]).css('font-weight', 'bold');

        // Tô màu dòng record có tỉ lệ tăng giảm
        let trGrid = $('#gridCompareMonthForAllCompare tbody tr');
        for (let i = 0; i < trGrid.length; i++) {

            let tdGrid = $(trGrid[i]).find('td');

            // Theo % thì loại đối tượng tổng ra
            for (let j = 1; j < tdGrid.length; j++) {
                tdCellValue = kendo.parseFloat(tdGrid[j].textContent);

                // Điều kiện nếu td là âm thì tô màu đỏ ngược lại màu Xanh
                if (tdCellValue != null) {
                    $(tdGrid[j]).css('color', 'red');
                    if (tdCellValue > 0) {
                        $(tdGrid[j]).css('color', 'green');
                    }
                }
            }
        }

        // Tô màu dòng record có tỉ lệ tăng giảm dòng cuối
        trGrid = $('#gridCompareMonthForAllCompare tfoot tr');
        for (let i = 0; i < trGrid.length; i++) {

            let tdGrid = $(trGrid[i]).find('td');

            // Theo % thì loại đối tượng tổng ra
            for (let j = 1; j < tdGrid.length; j++) {
                tdCellValue = kendo.parseFloat(tdGrid[j].textContent);

                // Điều kiện nếu td là âm thì tô màu đỏ ngược lại màu Xanh
                if (tdCellValue != null) {
                    $(tdGrid[j]).css('color', 'red');
                    if (tdCellValue > 0) {
                        $(tdGrid[j]).css('color', 'green');
                    }
                }
            }
        }
    }

    function onDataReportTypeID(arg) {

        return {
            month: "@toMonth",
            year: "@toYear",
            reportTypeID: "@reportTypeID",
            marketID: "@marketID"
        };
    }

    // Change radio
    $("input[name='reportDate']").change(function () {

        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = $('input[name="reportDate"]:checked').val();
        localStorage.reportTypeLS = reportTypeLS;
        // Do something interesting here
    });
</script>