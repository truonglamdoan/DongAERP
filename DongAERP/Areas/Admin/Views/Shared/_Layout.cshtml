@using DongA.Entities;
@using Kendo.Mvc.UI;
@using DongA.Core;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>SB Admin 2 - Dashboard</title>
    <!-- Custom fonts for this template-->
    <link href="~/Assets/Admin/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    @*<link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">*@

    <link href="~/Content/css.css" rel="stylesheet" />
    <!-- Custom styles for this template-->
    <link href="~/Assets/Admin/css/sb-admin-2.min.css" rel="stylesheet">

    @*<link href="https://kendo.cdn.telerik.com/2020.2.513/styles/kendo.bootstrap-v4.min.css" rel="stylesheet" type="text/css" />*@
    <link href="~/Content/kendo/styles/kendo.bootstrap-v4.min.css" rel="stylesheet" />

    <script src="~/Scripts/kendo/js/jquery.min.js"></script>
    <script src="~/Scripts/kendo/js/jszip.min.js"></script>
    <script src="~/Scripts/kendo/js/kendo.all.min.js"></script>
    <script src="~/Scripts/kendo/js/kendo.aspnetmvc.min.js"></script>

    <script src="~/Scripts/js.cookie.min.js"></script>

</head>

@{
    if (DongAEnvironment.UserID == null)
    {
        Response.Redirect("~/Admin/Login/Index");
    }
}
<body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">
        <!-- Sidebar -->
        @*@RenderPage("_LeftMenu.cshtml")*@
        @{
            Html.RenderAction("LeftMenu", "Home");
        }
        <!-- End of Sidebar -->
        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">
            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow" style="display: block;">
                    <!-- Sidebar Toggle (Topbar) -->
                    @*<button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>*@
                    @if (!HttpContext.Current.Request.Url.LocalPath.Equals("/Admin"))
                    {
                        <div class="input_param" style="position: absolute;float: left;width: 100%;">
                            <div style=" display: inline; margin-right: 10%; "><span> Đối tác: </span></div>
                            <div style=" display: inline; margin-right: 10%; ">
                                @(Html.Kendo().RadioButton().Name("TotalReport").Checked(true).Value(2).HtmlAttributes(new { @name = "report" }).Label("Tổng hợp"))
                            </div>
                            <div style=" display: inline; margin-right: 10%; ">
                                @(Html.Kendo().RadioButton().Name("DABReport").Value(0).HtmlAttributes(new { @name = "report" }).Label("DAB"))
                            </div>
                            <div style=" display: inline; margin-right: 10%; ">
                                @(Html.Kendo().RadioButton().Name("DAMReport").Value(1).HtmlAttributes(new { @name = "report" }).Label("DAMTC"))
                            </div>

                            <div class="armchair" style="width: 15%;position: absolute;">

                                <h4 style="margin-top: 4%;font-size: 1rem;">Loại báo cáo:</h4>
                                @(Html.Kendo().DropDownList()
                                  .Name("categories_Level0")
                                  .HtmlAttributes(new { style = "width:100%" })
                                  .OptionLabel("Loại báo cáo...")
                                  .DataTextField("PartnerName")
                                  .DataValueField("PartnerID")
                                  //.DataSource(source => {
                                  //     source.Read(read => {
                                  //         read.Action("Categories", "Home");
                                  //     });
                                  //})
                                  .BindTo(new List<Partner>()
                                {
                                    new Partner(){PartnerID ="level0_item1", PartnerName ="Tổng hợp"},
                                    new Partner(){PartnerID ="level0_item2", PartnerName ="Chi tiết"},
                                }

                                  )
                                )

                            </div>
                            <div class="armchair" style="width: 22%;position: absolute;margin-left: 17%;">
                                <h4 style="margin-top: 2em;margin-top: 3%;font-size: 1rem;">Hình thức báo cáo:</h4>
                                @(Html.Kendo().DropDownList()
                                .Name("categories_Level1")
                                .HtmlAttributes(new { style = "width:100%" })
                                .OptionLabel("Chọn loại...")
                                .DataTextField("PartnerName")
                                .DataValueField("PartnerID")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("CategoryLevelOne", "Home").Data("dataLevelZero");
                                    })
                                    .ServerFiltering(true);
                                })
                                .Enable(false)
                                .AutoBind(false)
                                .CascadeFrom("categories_Level0")
                                )
                            </div>

                            <div class="armchair" style="width: 15%;position: absolute;margin-left: 42%;">
                                <h4 style="margin-top: 2em;margin-top: 3%;font-size: 1rem;">Loại hình:</h4>
                                @(Html.Kendo().DropDownList()
                                .Name("categories_Level2")
                                .HtmlAttributes(new { style = "width:100%; margin-top: 3px;" })
                                .OptionLabel("Chọn báo cáo...")
                                .DataTextField("PartnerName")
                                .DataValueField("PartnerID")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("CategoryLevelTwo", "Home")
                                            .Data("dataLevelOne");
                                    })
                                    .ServerFiltering(true);
                                })
                                .Enable(false)
                                .AutoBind(false)
                                .CascadeFrom("categories_Level1")
                                )
                            </div>
                            <div style=" width: 20%; margin-left: 60%; ">
                                <h4 style="margin-top: 2em;margin-top: 3%;font-size: 1rem;">Thời gian:</h4>
                                @(Html.Kendo().DropDownList()
                                    .Name("categories_Level3")
                                    .HtmlAttributes(new { style = "width:100%; margin-bottom: 5%;" })
                                    .OptionLabel("Thời gian...")
                                    .DataTextField("PartnerName")
                                    .DataValueField("PartnerID")
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("CategoryLevelThree", "Home")
                                                .Data("dataLevelTwo");
                                        })
                                        .ServerFiltering(true);
                                    })
                                    .Events(events =>
                                    {
                                        events.Select("onSelectTimeReport");
                                        events.Change("onChangeTimeReport");
                                    })
                                    .Enable(false)
                                    .AutoBind(false)
                                    .CascadeFrom("categories_Level2")
                                )
                            </div>

                            <div>
                                <div class="timeReport">
                                    <ul style="width: 35%;position: absolute;display: block;padding-left: 0%;">
                                        <span class="startTimeName" style="float: left;margin-right: 30px;margin-top: 5px;"></span>
                                        <span class="timeStart">
                                            @*@(Html.Kendo().DatePicker()
                                                                        .Name("FromDay")
                                                                        .Format("dd/MM/yyyy")
                                                                        .Value(DateTime.Now)
                                                                        .HtmlAttributes(new { style = "width: 70%;float: left;", title = "datepicker" })
                                            )*@
                                        </span>
                                    </ul>
                                    <ul style="margin-left: 25%;position: absolute;">
                                        <span class="endTimeName" style="margin-left: 0%;margin-right: 30px;display: inline;"></span>
                                        <span class="timeEnd" style=" display: inline-flex; ">
                                            @*@(Html.Kendo().DatePicker()
                                                .Name("ToDay")
                                                .Format("dd/MM/yyyy")
                                                .Value(DateTime.Now)
                                                .HtmlAttributes(new { style = "width: 100%", title = "datepicker" })
                                            )*@
                                        </span>
                                    </ul>
                                </div>
                                <div>
                                    <ul class="categoriesDetaitMarketID" style="float: right;margin-right: 15%;position: absolute;margin-left: 57%;width: 86%;display: none;">
                                        @(Html.Kendo().DropDownList()
                                            .Name("categoriesDetaitMarket")
                                            .HtmlAttributes(new { style = "width: 24%;float: left;" })
                                            //.OptionLabel("Chọn Thị trường...")
                                            .DataTextField("MarketName")
                                            .DataValueField("MarketCode")
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("ListMarketForPartner", "ReportDetailtByMarket");
                                                });
                                                //.ServerFiltering(true);
                                            })
                                            .Enable(false)
                                            .Filter(FilterType.Contains)

                                        )
                                    </ul>
                                    <ul style=" float: right; margin-right: 4%; ">
                                        @(Html.Kendo().Button()
                                            .Name("textButton")
                                            .Content("Xem báo cáo")
                                            .HtmlAttributes(new { @type = "button", @class = "kendoDanger" })
                                            .Events(ev => ev.Click("onClickReport"))
                                        )
                                    </ul>
                                </div>
                                
                            </div>
                        </div>
                        
                    }
                    <!-- Topbar Navbar -->
                    <div style=" float: right; ">
                        <ul class="navbar-nav ml-auto">
                            <!-- Nav Item - Search Dropdown (Visible Only XS) -->
                            <li class="nav-item dropdown no-arrow d-sm-none">
                                <a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-search fa-fw"></i>
                                </a>
                                <!-- Dropdown - Messages -->
                                <div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in" aria-labelledby="searchDropdown">
                                    <form class="form-inline mr-auto w-100 navbar-search">
                                        <div class="input-group">
                                            <input type="text" class="form-control bg-light border-0 small" placeholder="Search for..." aria-label="Search" aria-describedby="basic-addon2">
                                            <div class="input-group-append">
                                                <button class="btn btn-primary" type="button">
                                                    <i class="fas fa-search fa-sm"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </li>
                            <div class="topbar-divider d-none d-sm-block"></div>
                            <!-- Nav Item - User Information -->
                            <li class="nav-item dropdown no-arrow">
                                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img style=" margin-right: 20%; " class="img-profile rounded-circle" src="">
                                    <span class="mr-2 d-none d-lg-inline text-gray-600 small" style="font-weight: bold;">@DongAEnvironment.Fullname</span>
                                </a>
                                <!-- Dropdown - User Information -->
                                <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="userDropdown">
                                    <a class="dropdown-item" href="#">
                                        <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Profile
                                    </a>
                                    <a class="dropdown-item" href="#">
                                        <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Settings
                                    </a>
                                    <a class="dropdown-item" href="#">
                                        <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Activity Log
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item" href="/Admin/Login/Logout" data-toggle="modal" data-target="#logoutModal">
                                        <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Đăng xuất
                                    </a>
                                </div>
                            </li>
                        </ul>
                    </div>
                </nav>
                <!-- End of Topbar -->
                <!-- Begin Page Content -->
                <div class="container-fluid">

                    @RenderBody()
                    <!-- Page Heading -->

                </div>
                <!-- /.container-fluid -->
            </div>
            <!-- End of Main Content -->
            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; Your Website 2020</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->
        </div>
        <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->
    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>
    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Đăng xuất</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Chọn "Đăng xuất" nếu bạn muốn thoát tài khoản</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Hủy bỏ</button>
                    <a class="btn btn-primary" href="/Admin/Login/Logout">Đăng xuất</a>
                </div>
            </div>
        </div>
    </div>
    <!-- Bootstrap core JavaScript-->
    @*<script src="~/Assets/Admin/vendor/jquery/jquery.min.js"></script>*@
    <script src="~/Assets/Admin/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Core plugin JavaScript-->
    <script src="~/Assets/Admin/vendor/jquery-easing/jquery.easing.min.js"></script>
    <!-- Custom scripts for all pages-->
    <script src="~/Assets/Admin/js/sb-admin-2.min.js"></script>
    <!-- Page level plugins -->
    <script src="~/Assets/Admin/vendor/chart.js/Chart.min.js"></script>
    <!-- Page level custom scripts -->
    @*<script src="~/Assets/Admin/js/demo/chart-area-demo.js"></script>
        <script src="~/Assets/Admin/js/demo/chart-pie-demo.js"></script>*@
</body>
</html>

<script type="text/javascript">

    var reportTypeID = null;

    $(document).ready(function () {

        $($('.input_param').parent()).css('height', '174px')


        let value = localStorage.dataAutoComplete;
        let valueReportType = localStorage.reportTypeLS;

        let level0 = $("#categories_Level0").data("kendoDropDownList");
        // Hình thức báo cáo
        let level1 = $("#categories_Level1").data("kendoDropDownList");
        // Loại hình
        let level2 = $("#categories_Level2").data("kendoDropDownList");
        // Thời gian
        let level3 = $("#categories_Level3").data("kendoDropDownList");
        //let reportType = $("#reportType").data("kendoDropDownList");
        debugger;
        if (value != undefined) {

            let listData = value.split('-');
            level0.value(listData[0]);
            level1.value(listData[1]);
            level2.value(listData[2]);
            level3.value(listData[3]);

            // Thay đổi thời gian
            level3.trigger("change");
        }

        // Set comboBox đối tác
        if (!isNullOrEmpty(valueReportType) || valueReportType != undefined) {
            let reportValue = parseInt(valueReportType);
            switch (reportValue) {
                case 0:
                    $('input[name="report"]')[1].checked = true;
                    break;
                case 1:
                    $('input[name="report"]')[2].checked = true;
                    break;
                default:
                    $('input[name="report"]')[0].checked = true;
            }
            
        }
    });

    function onClickReport(e) {
        // loại đối tác
        let reportTypeID = $('input[name="report"]:checked').val();
        // Loại báo cáo
        let level0 = $("#categories_Level0").data("kendoDropDownList").value();
        // Hình thức báo cáo
        let level1 = $("#categories_Level1").data("kendoDropDownList").value();
        // Loại hình
        let level2 = $("#categories_Level2").data("kendoDropDownList").value();
        // Thời gian
        let level3 = $("#categories_Level3").data("kendoDropDownList").value();

        // Lưu giá trị vào localStogare
        localStorage.removeItem('dataAutoComplete');
        let dataAutoComplete = kendo.format("{0}-{1}-{2}-{3}", level0, level1, level2, level3);
        localStorage.dataAutoComplete = dataAutoComplete;
        // Lưu giá trị của loại báo cáo
        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = reportTypeID;
        localStorage.reportTypeLS = reportTypeLS;

        // Theo ngày
        let fromDate = null;
        let fromDateConvert = null;    
        let toDate = null;
        let toDateConvert = null;
        // Giá trị của giai đoạn
        let gradationDicID = null;
        let url = null;
        // Báo cáo tổng hợp
        if (level0 == 'level0_item1') {
            // Hình thức báo cáo
            let categoryText = null;
            switch (level1) {
                case 'item1':
                    categoryText = 'ReportForTotalPayment';
                    break;
                case 'item2':
                    categoryText = 'Report';
                    break;
                case 'item3':
                    categoryText = 'ReportForMakets';
                    break;
                default:
                    categoryText = 'ReportTotalMoneyType';
            }

            // thời gian
            let reportText = null;
            if (level2 == 'item1') {

                switch (level3) {
                    case 'item1':
                        reportText = 'ReportDay';

                        fromDate = $('#FromDay').data('kendoDatePicker').value();
                        fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                        toDate = $('#ToDay').data('kendoDatePicker').value();
                        toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                        if ((fromDate.getMonth() == toDate.getMonth() && fromDate.getFullYear() == toDate.getFullYear())
                            // Trường hợp khác tháng cùng năm
                            || (toDate.getMonth() == fromDate.getMonth() + 1 && fromDate.getFullYear() == toDate.getFullYear() && difference_In_Days < 30)
                            // Trường hợp khác năm khác tháng
                            || fromDate.getMonth() == 11 && fromDate.getFullYear() + 1 == toDate.getFullYear() && difference_In_Days < 30) {

                            // Tạo url cho link
                            url = kendo.format("/Admin/{0}/{1}?fromDay={2}&toDay={3}&reportTypeID={4}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID);
                        } else {
                            $("<div></div>").kendoAlert({
                                title: "Cảnh báo!",
                                content: "Bạn chỉ được phép tìm kiếm trong 12 tháng trở lại"
                            }).data("kendoAlert").open();
                        }
                        break;
                    case 'item2':
                        
                        reportText = 'ReportMonth';

                        fromDate = $('#FromMonth').data('kendoDatePicker').value();
                        fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                        toDate = $('#ToMonth').data('kendoDatePicker').value();
                        toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                        // Chỉ cho phép chọn trong 12 tháng
                        if ((fromDate.getFullYear() == toDate.getFullYear() && fromDate.getFullYear() == toDate.getFullYear())
                            || (toDate.getFullYear() == fromDate.getFullYear() + 1 && difference_In_Days < 12)) {

                            // Tạo url cho link
                            url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID);
                        } else {
                            $("<div></div>").kendoAlert({
                                title: "Cảnh báo!",
                                content: "Bạn chỉ được phép tìm kiếm trong 12 tháng trở lại"
                            }).data("kendoAlert").open();
                        }
                        break;
                    default:
                        reportText = 'ReportYear';

                        fromDate = $('#FromYear').data('kendoDatePicker').value();
                        fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                        toDate = $('#ToYear').data('kendoDatePicker').value();
                        toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                        if (toDate.getFullYear() - fromDate.getFullYear() > 4) {

                            $("<div></div>").kendoAlert({
                                title: "Cảnh báo!",
                                content: "Bạn chỉ được phép tìm kiếm trong 5 năm trở lại"
                            }).data("kendoAlert").open();
                        } else {

                            url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID);

                        }
                }
                
            } else {
                if (level3 == 'item1') {
                    reportText = 'ReportGradationCompare';

                    gradationDicID = $("#gradation").data("kendoComboBox");
                    toDate = $('#ToYear').data('kendoDatePicker').value().getFullYear();

                    url = kendo.format("/Admin/{0}/{1}?gradation={2}&year={3}&reportTypeID={4}", categoryText, reportText, gradationDicID.value(), toDate, reportTypeID);
                }
                
                if (level3 == 'item2') {
                    
                    reportText = 'ReportCompareForMonth';

                    let year = $('#FromMonth').data('kendoDatePicker').value().getFullYear();
                    let month = $('#FromMonth').data('kendoDatePicker').value().getMonth() + 1;

                    url = kendo.format("/Admin/{0}/{1}?month={2}&year={3}&reportTypeID={4}", categoryText, reportText, month, year, reportTypeID);
                }
            }

            if (url != null) {
                window.location = url;
            }
            
        } else {

        }



        //let typeOfSale = $("#typeOfSale").data("kendoDropDownList").value();

        //let categoriesLayout = $("#categoriesLayout").data("kendoDropDownList").value();
        //let reportLayout = $("#reportLayout").data("kendoDropDownList").value();
        //let categoryDetailtLayout = $("#categoryDetailtLayout").data("kendoDropDownList").value();
        //let reportTypeID = "2";

        //if (!isNullOrEmpty(categoriesLayout) && !isNullOrEmpty(reportLayout) && !isNullOrEmpty(categoryDetailtLayout)) {

        //    // Hình thức báo cáo
        //    let categoryText = null;

        //    switch (categoriesLayout) {
        //        case 'item1':
        //            categoryText = 'ReportForTotalPayment';
        //            break;
        //        case 'item2':
        //            categoryText = 'Report';
        //            break;
        //        case 'item3':
        //            categoryText = 'ReportForMakets';
        //            break;
        //        default:
        //            categoryText = 'ReportTotalMoneyType';
        //    }

        //    // Loại báo cáo
        //    let reportText = null;
        //    switch (reportLayout) {
        //        case 'item1':
        //            reportText = 'ReportDay';
        //            break;
        //        case 'item2':
        //            reportText = 'ReportMonth';
        //            break;
        //        case 'item3':
        //            reportText = 'ReportYear';
        //            break;
        //        case 'item4':
        //            reportText = 'ReportGradationCompare';
        //            break;
        //        default:
        //            reportText = 'ReportCompareForMonth';
        //    }

        //    //localStorage.removeItem('valueReport');
        //    // Lưu giá trị vào biến local storage
        //    let valueLocalStorage = kendo.format("{0}_{1}_{2}", categoriesLayout, categoryDetailtLayout, reportLayout);
        //    localStorage.valueReport = valueLocalStorage;

        //    // Lưu giá trị của loại báo cáo
        //    localStorage.removeItem('reportTypeLS');
        //    let reportTypeLS = reportTypeID;
        //    localStorage.reportTypeLS = reportTypeLS;
        //    window.location = kendo.format("/Admin/{0}/{1}", categoryText, reportText);

        //}
    }

    // Data cho comboBox
    function filterDetailt() {

        return {
            reportID: $("#categoryDetailtLayout").val()
        };
    }

    function onSelectTimeReport(e) {

        // Loại báo cáo
        let level0 = $("#categories_Level0").data("kendoDropDownList").value();
        // Loại hình
        let level2 = $("#categories_Level2").data("kendoDropDownList").value();

        if ((level0 == null || level0 == undefined) && (level2 == null || level2 == undefined)) {

            let value = localStorage.dataAutoComplete;
            if (value != undefined) {

                let listData = value.split('-');
                level0.value(listData[0]);
                level2.value(listData[2]);
            }
        }

        // Xóa ngày tháng
        $(".k-datepicker").remove();
        // Xóa comboBox
        $(".k-combobox-clearable").remove();
        // Tắt chọn thị trường
        $("#categoriesDetaitMarket").data("kendoDropDownList").enable(false);

        if (e.item) {
            let dataItem = this.dataItem(e.item);

            // Báo cáo tổng hợp
            if (level0 == 'level0_item1' && level2 == 'item1'
                || (level0 == 'level0_item2'
                    && (level2 == 'item1' || level2 == 'item2'))) {

                // Chọn báo cáo chi tiết
                let date = new Date();
                let timeNow = kendo.toString(date, "dd/MM/yyyy");

                if (dataItem.PartnerID == 'item1') {

                    $('.timeReport .startTimeName').text("Từ ngày: ");
                    $('.timeReport .endTimeName').text("Đến ngày: ");

                    $('.timeStart').append(' <input id="FromDay" value=' + timeNow + 'style="width: 70%;float: left;" title = "datepicker"/>');
                    $("#FromDay").kendoDatePicker({

                        format: "dd/MM/yyyy",
                    });

                    $('.timeEnd').append(' <input id="ToDay" value=' + timeNow + 'style="width: 100%;" title = "datepicker"/>');
                    $("#ToDay").kendoDatePicker({

                        format: "dd/MM/yyyy",
                    });
                } else if (dataItem.PartnerID == 'item2') {

                    timeNow = kendo.toString(date, "MM/yyyy");
                    $('.timeReport .startTimeName').text("Từ Tháng: ");
                    $('.timeReport .endTimeName').text("Đến Tháng: ");

                    $('.timeStart').append(' <input id="FromMonth" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                    $("#FromMonth").kendoDatePicker({
                        // defines the start view
                        start: "year",

                        // defines when the calendar should return date
                        depth: "year",
                        format: "MM/yyyy",
                    });

                    $('.timeEnd').append(' <input id="ToMonth" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                    $("#ToMonth").kendoDatePicker({
                        // defines the start view
                        start: "year",

                        // defines when the calendar should return date
                        depth: "year",
                        format: "MM/yyyy",
                    });
                } else {
                    timeNow = kendo.toString(date, "yyyy");

                    $('.timeReport .startTimeName').text("Từ năm: ");
                    $('.timeReport .endTimeName').text("Đến năm: ");

                    $('.timeStart').append(' <input id="FromYear" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                    $("#FromYear").kendoDatePicker({
                        // defines the start view
                        start: "decade",

                        // defines when the calendar should return date
                        depth: "decade",
                        format: "yyyy",
                    });

                    $('.timeEnd').append(' <input id="ToYear" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                    $("#ToYear").kendoDatePicker({
                        // defines the start view
                        start: "decade",

                        // defines when the calendar should return date
                        depth: "decade",
                        format: "yyyy",
                    });
                }
            }

            // Trường hợp chọn giai đoạn
            // Báo cáo tổng hợp
            if (level0 == 'level0_item1' && level2 == 'item2') {

                let date = new Date();
                let timeNow = kendo.toString(date, "yyyy");

                if (dataItem.PartnerID == 'item1') {

                    $('.timeReport .startTimeName').text("Giai đoạn: ");
                    $('.timeReport .endTimeName').text("Năm: ");

                    $('.timeStart').append(' <input id="gradation" placeholder="Chọn giai đoạn..." style="width: 50%;float: left;"/>');
                    $("#gradation").kendoComboBox({
                        dataTextField: "text",
                        dataValueField: "value",
                        dataSource: [
                            { text: "3 tháng đầu năm", value: "1" },
                            { text: "6 tháng đầu năm", value: "2" },
                            { text: "9 tháng", value: "3" },
                            { text: "12 tháng", value: "4" }
                        ],
                        filter: "contains",
                        suggest: true,
                        index: 0
                    });

                    $('.timeEnd').append(' <input id="ToYear" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                    $("#ToYear").kendoDatePicker({
                        // defines the start view
                        start: "decade",

                        // defines when the calendar should return date
                        depth: "decade",
                        format: "yyyy",
                    });
                } else {
                    timeNow = kendo.toString(date, "MM/yyyy");
                    
                    $('.timeReport .startTimeName').text("Giai đoạn: ");
                    $('.timeReport .endTimeName').text("");

                    $('.timeStart').append(' <input id="FromMonth" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                    $("#FromMonth").kendoDatePicker({
                        // defines the start view
                        start: "year",

                        // defines when the calendar should return date
                        depth: "year",
                        format: "MM/yyyy",
                    });
                }
            }

            // Trường hợp chọn loại báo cáo chi tiết theo giai đoạn và theo tháng
            // Trường hợp chọn giai đoạn
            // Báo cáo tổng hợp
            if (level0 == 'level0_item2' && level2 == 'item3') {

                let date = new Date();
                let timeNow = kendo.toString(date, "yyyy");
                switch (dataItem.PartnerID) {
                    case 'item1':

                        $('.timeReport .startTimeName').text("Giai đoạn: ");
                        $('.timeReport .endTimeName').text("Năm: ");

                        $('.timeStart').append(' <input id="gradation" placeholder="Chọn giai đoạn..." style="width: 50%;float: left;"/>');
                        $("#gradation").kendoComboBox({
                            dataTextField: "text",
                            dataValueField: "value",
                            dataSource: [
                                { text: "3 tháng đầu năm", value: "1" },
                                { text: "6 tháng đầu năm", value: "2" },
                                { text: "9 tháng", value: "3" },
                                { text: "12 tháng", value: "4" }
                            ],
                            filter: "contains",
                            suggest: true,
                            index: 0
                        });

                        $('.timeEnd').append(' <input id="ToYear" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                        $("#ToYear").kendoDatePicker({
                            // defines the start view
                            start: "decade",

                            // defines when the calendar should return date
                            depth: "decade",
                            format: "yyyy",
                        });
                        break;
                    case 'item2':
                        // Tắt chọn thị trường
                        $("#categoriesDetaitMarket").data("kendoDropDownList").enable(true);

                        $('.timeReport .startTimeName').text("Giai đoạn: ");
                        $('.timeReport .endTimeName').text("Năm: ");

                        $('.timeStart').append(' <input id="gradation" placeholder="Chọn giai đoạn..." style="width: 50%;float: left;"/>');
                        $("#gradation").kendoComboBox({
                            dataTextField: "text",
                            dataValueField: "value",
                            dataSource: [
                                { text: "3 tháng đầu năm", value: "1" },
                                { text: "6 tháng đầu năm", value: "2" },
                                { text: "9 tháng", value: "3" },
                                { text: "12 tháng", value: "4" }
                            ],
                            filter: "contains",
                            suggest: true,
                            index: 0
                        });

                        $('.timeEnd').append(' <input id="ToYear" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                        $("#ToYear").kendoDatePicker({
                            // defines the start view
                            start: "decade",

                            // defines when the calendar should return date
                            depth: "decade",
                            format: "yyyy",
                        });

                        break;
                    case 'item3':
                        timeNow = kendo.toString(date, "MM/yyyy");

                        $('.timeReport .startTimeName').text("Giai đoạn: ");
                        $('.timeReport .endTimeName').text("");

                        $('.timeStart').append(' <input id="FromMonth" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                        $("#FromMonth").kendoDatePicker({
                            // defines the start view
                            start: "year",

                            // defines when the calendar should return date
                            depth: "year",
                            format: "MM/yyyy",
                        });

                        break;
                    default:
                        timeNow = kendo.toString(date, "MM/yyyy");
                        // Tắt chọn thị trường
                        $("#categoriesDetaitMarket").data("kendoDropDownList").enable(true);
                        $('.timeReport .startTimeName').text("Giai đoạn: ");
                        $('.timeReport .endTimeName').text("");

                        $('.timeStart').append(' <input id="FromMonth" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                        $("#FromMonth").kendoDatePicker({
                            // defines the start view
                            start: "year",

                            // defines when the calendar should return date
                            depth: "year",
                            format: "MM/yyyy",
                        });
                }
            }
        }
    }

    function onChangeTimeReport(e) {
        debugger;
        let a = null;
        onSelectTimeReport();
    }
    // Change radio
    $("input[name='report']").change(function () {
        //debugger;
        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = $('input[name="report"]:checked').val();
        localStorage.reportTypeLS = reportTypeLS;
        // Do something interesting here
    });
</script>

<style>
    .btn-k-primary {
        color: #fff;
        background-color: #4e73df;
        border-color: #4e73df;
    }
    .kendoDanger {
        background-color: blue;
        color: white;
    }

    .kendoDanger:hover {
        background-color: darkblue;
        color: white;
    }
</style>