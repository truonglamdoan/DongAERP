@using DongA.Entities;
@using Kendo.Mvc.UI;
@using DongA.Core;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>SB Admin 2 - Dashboard</title>
    <!-- Custom fonts for this template-->
    <link href="~/Assets/Admin/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    @*
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">*@

    <link href="~/Content/css.css" rel="stylesheet" />
    <!-- Custom styles for this template-->
    <link href="~/Assets/Admin/css/sb-admin-2.min.css" rel="stylesheet">

    @*
    <link href="https://kendo.cdn.telerik.com/2020.2.513/styles/kendo.bootstrap-v4.min.css" rel="stylesheet" type="text/css" />*@
    <link href="~/Content/kendo/styles/kendo.bootstrap-v4.min.css" rel="stylesheet" />

    <script src="~/Scripts/kendo/js/jquery.min.js"></script>
    <script src="~/Scripts/kendo/js/jszip.min.js"></script>
    <script src="~/Scripts/kendo/js/kendo.all.min.js"></script>
    <script src="~/Scripts/kendo/js/kendo.aspnetmvc.min.js"></script>

    <script src="~/Scripts/js.cookie.min.js"></script>

</head>

@{
    if (DongAEnvironment.UserID == null)
    {
        Response.Redirect("~/Admin/Login/Index");
    }
}
<body id="page-top">
    <!-- Page Wrapper -->
    <div id="wrapper">
        <!-- Sidebar -->
        @*@RenderPage("_LeftMenu.cshtml")*@
        @{
        Html.RenderAction("LeftMenu", "Home");
        }
        <!-- End of Sidebar -->
        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">
            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow" style="display: block;">
                    <!-- Sidebar Toggle (Topbar) -->
                    @*<button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>*@
                    @if (!HttpContext.Current.Request.Url.LocalPath.Equals("/Admin"))
                    {
                    <div class="input_param" style="position: absolute;float: left;width: 100%;">
                        <div style=" display: inline; margin-right: 10%; "><span> Đối tác: </span></div>
                        <div style=" display: inline; margin-right: 10%; ">
                            @(Html.Kendo().RadioButton().Name("TotalReport").Checked(true).Value(2).HtmlAttributes(new { @name = "report" }).Label("Tổng hợp"))
                        </div>
                        <div style=" display: inline; margin-right: 10%; ">
                            @(Html.Kendo().RadioButton().Name("DABReport").Value(0).HtmlAttributes(new { @name = "report" }).Label("DAB"))
                        </div>
                        <div style=" display: inline; margin-right: 10%; ">
                            @(Html.Kendo().RadioButton().Name("DAMReport").Value(1).HtmlAttributes(new { @name = "report" }).Label("DAMTC"))
                        </div>

                        <div class="armchair" style="width: 15%;position: absolute;">

                            <h4 style="margin-top: 4%;font-size: 1rem;">Loại báo cáo:</h4>
                            @(Html.Kendo().DropDownList()
                                .Name("categories_Level0")
                                .HtmlAttributes(new { style = "width:100%" })
                                .OptionLabel("Loại báo cáo...")
                                .DataTextField("PartnerName")
                                .DataValueField("PartnerID")
                                //.DataSource(source => {
                                //     source.Read(read => {
                                //         read.Action("Categories", "Home");
                                //     });
                                //})
                                .BindTo(new List<Partner>()
                                    {
                                        new Partner(){PartnerID ="level0_item1", PartnerName ="Tổng hợp"},
                                        new Partner(){PartnerID ="level0_item2", PartnerName ="Chi tiết"},
                                    }

                                )
                                .Events(events =>
                                {
                                    events.Select("onClickReportLevel0");
                                })
                            )

                        </div>
                        <div class="armchair" style="width: 22%;position: absolute;margin-left: 17%;">
                            <h4 style="margin-top: 2em;margin-top: 3%;font-size: 1rem;">Hình thức báo cáo:</h4>
                            @(Html.Kendo().DropDownList()
                                .Name("categories_Level1")
                                .HtmlAttributes(new { style = "width:100%" })
                                .OptionLabel("Chọn loại...")
                                .DataTextField("PartnerName")
                                .DataValueField("PartnerID")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("CategoryLevelOne", "Home").Data("dataLevelZero");
                                    })
                                    .ServerFiltering(true);
                                })
                                .Enable(false)
                                .AutoBind(false)
                                .CascadeFrom("categories_Level0")
                            //.Events(events =>
                            //{
                            //    events.Select("onClickReportLevel1");
                            //})

                            )
                        </div>

                        <div class="armchair" style="width: 15%;position: absolute;margin-left: 42%;">
                            <h4 style="margin-top: 2em;margin-top: 3%;font-size: 1rem;">Loại hình:</h4>
                            @(Html.Kendo().DropDownList()
                                .Name("categories_Level2")
                                .HtmlAttributes(new { style = "width:100%; margin-top: 3px;" })
                                .OptionLabel("Chọn báo cáo...")
                                .DataTextField("PartnerName")
                                .DataValueField("PartnerID")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("CategoryLevelTwo", "Home")
                                        .Data("dataLevelOne");
                                    })
                                    .ServerFiltering(true);
                                })
                                .Enable(false)
                                .AutoBind(false)
                                .CascadeFrom("categories_Level1")
                                .Events(events =>
                                {
                                    events.Select("onClickReportLevel2");
                                })
                            )
                        </div>
                        <div style=" width: 20%; margin-left: 60%; ">
                            <h4 style="margin-top: 2em;margin-top: 3%;font-size: 1rem;">Thời gian:</h4>
                            @(Html.Kendo().DropDownList()
                                .Name("categories_Level3")
                                .HtmlAttributes(new { style = "width:100%; margin-bottom: 5%;" })
                                .OptionLabel("Thời gian...")
                                .DataTextField("PartnerName")
                                .DataValueField("PartnerID")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("CategoryLevelThree", "Home")
                                        .Data("dataLevelTwo");
                                    })
                                    .ServerFiltering(true);
                                })
                                .Events(events =>
                                {
                                    events.Select("onSelectTimeReport");
                                    events.DataBound("onDataBoundTimeReport");
                                })
                                .Enable(false)
                                .AutoBind(false)
                                .CascadeFrom("categories_Level2")
                            )
                        </div>

                        <div class="armchair" style=" display: inline; ">
                            <div class="timeReport">
                                <ul style="width: 35%;position: absolute;display: block;padding-left: 0%;">
                                    <span class="startTimeName" style="float: left;margin-right: 30px;margin-top: 5px;"></span>
                                    <span class="timeStart">
                                        @*@(Html.Kendo().DatePicker()
                                        .Name("FromDay")
                                        .Format("dd/MM/yyyy")
                                        .Value(DateTime.Now)
                                        .HtmlAttributes(new { style = "width: 70%;float: left;", title = "datepicker" })
                                        )*@
                                    </span>
                                </ul>
                                <ul style="margin-left: 25%;position: absolute;display: block;padding-left: 1px;">
                                    <span class="endTimeName" style="margin-left: 0%;margin-right: 30px;display: inline;"></span>
                                    <span class="timeEnd" style=" display: inline-flex; ">
                                        @*@(Html.Kendo().DatePicker()
                                        .Name("ToDay")
                                        .Format("dd/MM/yyyy")
                                        .Value(DateTime.Now)
                                        .HtmlAttributes(new { style = "width: 100%", title = "datepicker" })
                                        )*@
                                    </span>
                                </ul>
                            </div>
                            <div>
                                <ul class="categoriesMarket" style="float: right;margin-right: 15%;position: absolute;margin-left: 49%;width: 86%;">
                                    <span class="categoriesMarketText" style="margin-left: 0%;margin-right: 20px;display: inline;float: left;margin-top: 10px;"></span>
                                    <span class="categoriesDetaitMarketID" style="display: inline-flex;width: 24%;">
                                </ul>
                                <ul style=" float: right; margin-right: 4%; ">
                                    @(Html.Kendo().Button()
                                        .Name("textButton")
                                        .Content("Xem báo cáo")
                                        .HtmlAttributes(new { @type = "button", @class = "kendoDanger" })
                                        .Events(ev => ev.Click("onClickReport"))
                                    )
                                </ul>
                            </div>

                        </div>
                    </div>

                    }
                    <!-- Topbar Navbar -->
                    <div style=" float: right; ">
                        <ul class="navbar-nav ml-auto">
                            <!-- Nav Item - Search Dropdown (Visible Only XS) -->
                            <li class="nav-item dropdown no-arrow d-sm-none">
                                <a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-search fa-fw"></i>
                                </a>
                                <!-- Dropdown - Messages -->
                                <div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in" aria-labelledby="searchDropdown">
                                    <form class="form-inline mr-auto w-100 navbar-search">
                                        <div class="input-group">
                                            <input type="text" class="form-control bg-light border-0 small" placeholder="Search for..." aria-label="Search" aria-describedby="basic-addon2">
                                            <div class="input-group-append">
                                                <button class="btn btn-primary" type="button">
                                                    <i class="fas fa-search fa-sm"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </li>
                            <div class="topbar-divider d-none d-sm-block"></div>
                            <!-- Nav Item - User Information -->
                            <li class="nav-item dropdown no-arrow">
                                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img style=" margin-right: 20%; " class="img-profile rounded-circle" src="">
                                    <span class="mr-2 d-none d-lg-inline text-gray-600 small" style="font-weight: bold;">@DongAEnvironment.Fullname</span>
                                </a>
                                <!-- Dropdown - User Information -->
                                <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="userDropdown">
                                    <a class="dropdown-item" href="#">
                                        <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Profile
                                    </a>
                                    <a class="dropdown-item" href="#">
                                        <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Settings
                                    </a>
                                    <a class="dropdown-item" href="#">
                                        <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Activity Log
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item" href="/Admin/Login/Logout" data-toggle="modal" data-target="#logoutModal">
                                        <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Đăng xuất
                                    </a>
                                </div>
                            </li>
                        </ul>
                    </div>
                </nav>
                <!-- End of Topbar -->
                <!-- Begin Page Content -->
                <div class="container-fluid">

                    @RenderBody()
                    <!-- Page Heading -->

                </div>
                <!-- /.container-fluid -->
            </div>
            <!-- End of Main Content -->
            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>Copyright &copy; Your Website 2020</span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->
        </div>
        <!-- End of Content Wrapper -->
    </div>
    <!-- End of Page Wrapper -->
    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>
    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Đăng xuất</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Chọn "Đăng xuất" nếu bạn muốn thoát tài khoản</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Hủy bỏ</button>
                    <a class="btn btn-primary" href="/Admin/Login/Logout">Đăng xuất</a>
                </div>
            </div>
        </div>
    </div>
    <!-- Bootstrap core JavaScript-->
    @*
    <script src="~/Assets/Admin/vendor/jquery/jquery.min.js"></script>*@
    <script src="~/Assets/Admin/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Core plugin JavaScript-->
    <script src="~/Assets/Admin/vendor/jquery-easing/jquery.easing.min.js"></script>
    <!-- Custom scripts for all pages-->
    <script src="~/Assets/Admin/js/sb-admin-2.min.js"></script>
    <!-- Page level plugins -->
    <script src="~/Assets/Admin/vendor/chart.js/Chart.min.js"></script>
    <!-- Page level custom scripts -->
    @*
    <script src="~/Assets/Admin/js/demo/chart-area-demo.js"></script>
    <script src="~/Assets/Admin/js/demo/chart-pie-demo.js"></script>*@
</body>
</html>

<script type="text/javascript">

    var reportTypeID = null;

    $(document).ready(function () {

        $($('.input_param').parent()).css('height', '174px')
        
        let value = localStorage.dataAutoComplete;
        let valueReportType = localStorage.reportTypeLS;
        // Get mã thị trường
        let marketID = $('#categoriesDetaitMarket').data('kendoDropDownList');

        let level0 = $("#categories_Level0").data("kendoDropDownList");
        // Hình thức báo cáo
        let level1 = $("#categories_Level1").data("kendoDropDownList");
        // Loại hình
        let level2 = $("#categories_Level2").data("kendoDropDownList");
        // Thời gian
        let level3 = $("#categories_Level3").data("kendoDropDownList");
        //let reportType = $("#reportType").data("kendoDropDownList");

        if (value != undefined) {

            let listData = value.split('-');
            level0.value(listData[0]);
            level1.value(listData[1]);
            level2.value(listData[2]);
            level3.value(listData[3]);

            // Trường hợp là báo cáo chi tiết
            if (marketID != null) {

                marketID.value(listData[4]);
            }
        }

        // Set comboBox đối tác
        if (!isNullOrEmpty(valueReportType) || valueReportType != undefined) {
            let reportValue = parseInt(valueReportType);
            switch (reportValue) {
                case 0:
                    $('input[name="report"]')[1].checked = true;
                    break;
                case 1:
                    $('input[name="report"]')[2].checked = true;
                    break;
                default:
                    $('input[name="report"]')[0].checked = true;
            }

        }
    });

    function onClickReport(e) {

        // loại đối tác
        let reportTypeID = $('input[name="report"]:checked').val();

        // Loại báo cáo
        let level0 = $("#categories_Level0").data("kendoDropDownList").value();
        // Hình thức báo cáo
        let level1 = $("#categories_Level1").data("kendoDropDownList").value();
        // Loại hình
        let level2 = $("#categories_Level2").data("kendoDropDownList").value();
        // Thời gian
        let level3 = $("#categories_Level3").data("kendoDropDownList").value();

        // Lưu giá trị vào localStogare
        localStorage.removeItem('dataAutoComplete');
        let dataAutoComplete = kendo.format("{0}-{1}-{2}-{3}", level0, level1, level2, level3);
        localStorage.dataAutoComplete = dataAutoComplete;

        // Lưu giá trị của loại báo cáo
        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = reportTypeID;
        localStorage.reportTypeLS = reportTypeLS;

        // Theo ngày
        let fromDate = null;
        let fromDateConvert = null;
        let toDate = null;
        let toDateConvert = null;
        // Giá trị của giai đoạn
        let gradationDicID = null;
        let url = null;

        // param 1 và 2 cho ngày/tháng/năm/giai đoạn/ tháng
        let param1 = null;
        let param2 = null;

        // Tính số ngày chênh lệch
        let difference_In_Time = null;
        let difference_In_Days = null;

        // Báo cáo tổng hợp
        if (level0 == 'level0_item1') {
            // Hình thức báo cáo
            let categoryText = null;
            switch (level1) {
                case 'item1':
                    categoryText = 'ReportForTotalPayment';
                    break;
                case 'item2':
                    categoryText = 'Report';
                    break;
                case 'item3':
                    categoryText = 'ReportForMakets';
                    break;
                default:
                    categoryText = 'ReportTotalMoneyType';
            }

            // thời gian
            let reportText = null;
            if (level2 == 'item1') {

                switch (level3) {
                    case 'item1':
                        reportText = 'ReportDay';

                        fromDate = $('#FromDay').data('kendoDatePicker').value();
                        fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                        toDate = $('#ToDay').data('kendoDatePicker').value();
                        toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                        // Tính số ngày chênh lệch
                        difference_In_Time = toDate.getTime() - fromDate.getTime();
                        difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                        if ((fromDate.getMonth() == toDate.getMonth() && fromDate.getFullYear() == toDate.getFullYear())
                            // Trường hợp khác tháng cùng năm
                            || (toDate.getMonth() == fromDate.getMonth() + 1 && fromDate.getFullYear() == toDate.getFullYear() && difference_In_Days < 30)
                            // Trường hợp khác năm khác tháng
                            || fromDate.getMonth() == 11 && fromDate.getFullYear() + 1 == toDate.getFullYear() && difference_In_Days < 30) {

                            // Tạo url cho link
                            url = kendo.format("/Admin/{0}/{1}?fromDay={2}&toDay={3}&reportTypeID={4}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID);

                            // Set giá trị cho param1 và 2
                            param1 = fromDateConvert;
                            param2 = toDateConvert;

                        } else {
                            $("<div></div>").kendoAlert({
                                title: "Cảnh báo!",
                                content: "Bạn chỉ được phép tìm kiếm trong 30 ngày trở lại"
                            }).data("kendoAlert").open();
                        }
                        break;
                    case 'item2':

                        reportText = 'ReportMonth';

                        fromDate = $('#FromMonth').data('kendoDatePicker').value();
                        fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                        toDate = $('#ToMonth').data('kendoDatePicker').value();
                        toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                        // Tính số ngày chênh lệch
                        difference_In_Time = toDate.getTime() - fromDate.getTime();
                        difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                        // Chỉ cho phép chọn trong 12 tháng
                        if ((fromDate.getFullYear() == toDate.getFullYear() && fromDate.getFullYear() == toDate.getFullYear())
                            || (toDate.getFullYear() == fromDate.getFullYear() + 1 && difference_In_Days < 12)) {

                            // Tạo url cho link
                            url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID);
                            // Set giá trị cho param1 và 2
                            param1 = fromDateConvert;
                            param2 = toDateConvert;

                        } else {
                            $("<div></div>").kendoAlert({
                                title: "Cảnh báo!",
                                content: "Bạn chỉ được phép tìm kiếm trong 12 tháng trở lại"
                            }).data("kendoAlert").open();
                        }
                        break;
                    default:
                        reportText = 'ReportYear';

                        fromDate = $('#FromYear').data('kendoDatePicker').value();
                        fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                        toDate = $('#ToYear').data('kendoDatePicker').value();
                        toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                        // Tính số ngày chênh lệch
                        difference_In_Time = toDate.getTime() - fromDate.getTime();
                        difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                        if (toDate.getFullYear() - fromDate.getFullYear() > 4) {

                            $("<div></div>").kendoAlert({
                                title: "Cảnh báo!",
                                content: "Bạn chỉ được phép tìm kiếm trong 5 năm trở lại"
                            }).data("kendoAlert").open();
                        } else {

                            url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID);

                            // Set giá trị cho param1 và 2
                            param1 = fromDateConvert;
                            param2 = toDateConvert;
                        }
                }

            } else {
                if (level3 == 'item1') {
                    reportText = 'ReportGradationCompare';

                    gradationDicID = $("#gradation").data("kendoComboBox");
                    toDate = $('#ToYear').data('kendoDatePicker').value().getFullYear();

                    url = kendo.format("/Admin/{0}/{1}?gradation={2}&year={3}&reportTypeID={4}", categoryText, reportText, gradationDicID.value(), toDate, reportTypeID);

                    // Set giá trị cho param1 và 2
                    param1 = gradationDicID.value();
                    param2 = toDate;
                }

                if (level3 == 'item2') {

                    reportText = 'ReportCompareForMonth';

                    let year = $('#FromMonth').data('kendoDatePicker').value().getFullYear();
                    let month = $('#FromMonth').data('kendoDatePicker').value().getMonth() + 1;

                    url = kendo.format("/Admin/{0}/{1}?month={2}&year={3}&reportTypeID={4}", categoryText, reportText, month, year, reportTypeID);

                    // Set giá trị cho param1 và 2
                    param1 = month;
                    param2 = year;
                }
            }
            
            if (url != null) {

                // Lưu giá trị vào local storage
                localStorage.removeItem('timeReport');
                let timeReport = kendo.format("{0}-{1}-{2}-{3}", param1, param2, level0, level2);
                localStorage.timeReport = timeReport;

                window.location = url;

            }

        }

        // Báo cáo chi tiết
        if (level0 == 'level0_item2') {
            let marketID = null;
            let partnerID = null;
            // Loại hình
            let reportText = null;

            // Hình thức báo cáo
            let categoryText = null;
            switch (level1) {
                case 'item1':
                    categoryText = 'ReportDetailtByMarket';
                    break;
                case 'item2':
                    categoryText = 'ReportDetailtMarketByMoneyType';
                    break;
                case 'item3':
                    categoryText = 'ReportDetailtPartner';
                    break;
                default:
                    categoryText = '';
            }

            // Trường hợp hình thức báo cáo- Thị trường
            if (level1 == 'item1' || level1 == 'item2') {

                // Get mã thị trường
                marketID = $('#categoriesDetaitMarket').data('kendoDropDownList').value();

                if (marketID == '') {
                    return;
                }
                
                // Tất cả
                if (level2 == 'item1') {
                    // thời gian
                    switch (level3) {
                        case 'item1':
                            reportText = 'MarketForTotal';

                            fromDate = $('#FromDay').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToDay').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            if ((fromDate.getMonth() == toDate.getMonth() && fromDate.getFullYear() == toDate.getFullYear())
                                // Trường hợp khác tháng cùng năm
                                || (toDate.getMonth() == fromDate.getMonth() + 1 && fromDate.getFullYear() == toDate.getFullYear() && difference_In_Days < 30)
                                // Trường hợp khác năm khác tháng
                                || fromDate.getMonth() == 11 && fromDate.getFullYear() + 1 == toDate.getFullYear() && difference_In_Days < 30) {

                                // Tạo url cho link
                                url = kendo.format("/Admin/{0}/{1}?fromDay={2}&toDay={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID, marketID);

                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;

                            } else {
                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 30 ngày trở lại"
                                }).data("kendoAlert").open();
                            }
                            break;
                        case 'item2':

                            reportText = 'MarketForTotalForMonth';

                            fromDate = $('#FromMonth').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToMonth').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            // Chỉ cho phép chọn trong 12 tháng
                            if ((fromDate.getFullYear() == toDate.getFullYear() && fromDate.getFullYear() == toDate.getFullYear())
                                || (toDate.getFullYear() == fromDate.getFullYear() + 1 && difference_In_Days < 12)) {

                                // Tạo url cho link
                                url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID, marketID);
                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;

                            } else {
                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 12 tháng trở lại"
                                }).data("kendoAlert").open();
                            }
                            break;
                        default:
                            reportText = 'MarketForTotalForYear';

                            fromDate = $('#FromYear').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToYear').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            if (toDate.getFullYear() - fromDate.getFullYear() > 4) {

                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 5 năm trở lại"
                                }).data("kendoAlert").open();
                            } else {

                                url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID, marketID);

                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;
                            }
                            break;
                    }

                } else if (level2 == 'item2') {
                    // Báo cáo chi tiết của loại hình
                    // thời gian
                    switch (level3) {
                        case 'item1':
                            reportText = 'MarketForOne';

                            fromDate = $('#FromDay').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToDay').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            if ((fromDate.getMonth() == toDate.getMonth() && fromDate.getFullYear() == toDate.getFullYear())
                                // Trường hợp khác tháng cùng năm
                                || (toDate.getMonth() == fromDate.getMonth() + 1 && fromDate.getFullYear() == toDate.getFullYear() && difference_In_Days < 30)
                                // Trường hợp khác năm khác tháng
                                || fromDate.getMonth() == 11 && fromDate.getFullYear() + 1 == toDate.getFullYear() && difference_In_Days < 30) {

                                // Tạo url cho link
                                url = kendo.format("/Admin/{0}/{1}?fromDay={2}&toDay={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID, marketID);

                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;

                            } else {
                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 30 ngày trở lại"
                                }).data("kendoAlert").open();
                            }
                            break;
                        case 'item2':

                            reportText = 'MarketForOneForMonth';

                            fromDate = $('#FromMonth').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToMonth').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            // Chỉ cho phép chọn trong 12 tháng
                            if ((fromDate.getFullYear() == toDate.getFullYear() && fromDate.getFullYear() == toDate.getFullYear())
                                || (toDate.getFullYear() == fromDate.getFullYear() + 1 && difference_In_Days < 12)) {

                                // Tạo url cho link
                                url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID, marketID);
                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;

                            } else {
                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 12 tháng trở lại"
                                }).data("kendoAlert").open();
                            }
                            break;
                        default:
                            reportText = 'MarketForOneForYear';

                            fromDate = $('#FromYear').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToYear').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            if (toDate.getFullYear() - fromDate.getFullYear() > 4) {

                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 5 năm trở lại"
                                }).data("kendoAlert").open();
                            } else {

                                url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID, marketID);

                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;
                            }
                            break;
                    }
                } else {

                    let gradationDicID = null;
                    let toYear = null;

                    let year = null;
                    let month = null;
                    // Trường hợp so sánh theo giai đoạn
                    // thời gian
                    switch (level3) {
                        case 'item1':
                            reportText = 'ReportDetailtGradationCompare';

                            gradationDicID = $("#gradation").data("kendoComboBox").value();

                            toYear = $('#ToYear').data('kendoDatePicker').value().getFullYear();

                            // Tạo url cho link
                            url = kendo.format("/Admin/{0}/{1}?gradation={2}&year={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, gradationDicID, toYear, reportTypeID, marketID);

                            // Set giá trị cho param1 và 2
                            param1 = gradationDicID;
                            param2 = toYear;
                            break;
                        case 'item2':

                            reportText = 'ReportDetailtGradationCompareForOne';

                            gradationDicID = $("#gradation").data("kendoComboBox").value();

                            toYear = $('#ToYear').data('kendoDatePicker').value().getFullYear();

                            // Tạo url cho link
                            url = kendo.format("/Admin/{0}/{1}?gradation={2}&year={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, gradationDicID, toYear, reportTypeID, marketID);

                            // Set giá trị cho param1 và 2
                            param1 = gradationDicID;
                            param2 = toYear;
                            break;
                        case 'item3':

                            reportText = 'ReportDetailtCompareMonthForAll';

                            year = $('#FromMonth').data('kendoDatePicker').value().getFullYear();
                            month = $('#FromMonth').data('kendoDatePicker').value().getMonth() + 1;

                            url = kendo.format("/Admin/{0}/{1}?month={2}&year={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, month, year, reportTypeID, marketID);

                            // Set giá trị cho param1 và 2
                            param1 = month;
                            param2 = year;

                            break;
                        default:

                            reportText = 'ReportDetailtCompareMonthForOne';

                            year = $('#FromMonth').data('kendoDatePicker').value().getFullYear();
                            month = $('#FromMonth').data('kendoDatePicker').value().getMonth() + 1;

                            url = kendo.format("/Admin/{0}/{1}?month={2}&year={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, month, year, reportTypeID, marketID);

                            // Set giá trị cho param1 và 2
                            param1 = month;
                            param2 = year;

                            break;
                    }
                }
            }

            debugger;
            // Trường hợp hình thức báo cáo- Đối tác
            if (level1 == 'item3' || level1 == 'item4') {

                // Tất cả
                if (level2 == 'item1') {
                    // thời gian
                    switch (level3) {
                        case 'item1':
                            reportText = 'PartnerForTotal';

                            fromDate = $('#FromDay').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToDay').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            if ((fromDate.getMonth() == toDate.getMonth() && fromDate.getFullYear() == toDate.getFullYear())
                                // Trường hợp khác tháng cùng năm
                                || (toDate.getMonth() == fromDate.getMonth() + 1 && fromDate.getFullYear() == toDate.getFullYear() && difference_In_Days < 30)
                                // Trường hợp khác năm khác tháng
                                || fromDate.getMonth() == 11 && fromDate.getFullYear() + 1 == toDate.getFullYear() && difference_In_Days < 30) {

                                // Tạo url cho link
                                url = kendo.format("/Admin/{0}/{1}?fromDay={2}&toDay={3}&reportTypeID={4}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID);

                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;

                            } else {
                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 30 ngày trở lại"
                                }).data("kendoAlert").open();
                            }
                            break;
                        case 'item2':

                            reportText = 'PartnerForTotalForMonth';

                            fromDate = $('#FromMonth').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToMonth').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            // Chỉ cho phép chọn trong 12 tháng
                            if ((fromDate.getFullYear() == toDate.getFullYear() && fromDate.getFullYear() == toDate.getFullYear())
                                || (toDate.getFullYear() == fromDate.getFullYear() + 1 && difference_In_Days < 12)) {

                                // Tạo url cho link
                                url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID);
                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;

                            } else {
                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 12 tháng trở lại"
                                }).data("kendoAlert").open();
                            }
                            break;
                        default:
                            reportText = 'PartnerForTotalForYear';

                            fromDate = $('#FromYear').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToYear').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            if (toDate.getFullYear() - fromDate.getFullYear() > 4) {

                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 5 năm trở lại"
                                }).data("kendoAlert").open();
                            } else {

                                url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID);

                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;
                            }
                            break;
                    }

                } else if (level2 == 'item2') {
                    
                    // Get mã thị trường
                    partnerID = $('#categoriesDetaitPartner').data('kendoDropDownList').value();

                    if (partnerID == '') {
                        return;
                    }

                    // Báo cáo chi tiết của loại hình
                    // thời gian
                    switch (level3) {
                        case 'item1':
                            reportText = 'PartnerForOne';

                            fromDate = $('#FromDay').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToDay').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            if ((fromDate.getMonth() == toDate.getMonth() && fromDate.getFullYear() == toDate.getFullYear())
                                // Trường hợp khác tháng cùng năm
                                || (toDate.getMonth() == fromDate.getMonth() + 1 && fromDate.getFullYear() == toDate.getFullYear() && difference_In_Days < 30)
                                // Trường hợp khác năm khác tháng
                                || fromDate.getMonth() == 11 && fromDate.getFullYear() + 1 == toDate.getFullYear() && difference_In_Days < 30) {

                                // Tạo url cho link
                                url = kendo.format("/Admin/{0}/{1}?fromDay={2}&toDay={3}&reportTypeID={4}&partnerID={5}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID, partnerID);

                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;

                            } else {
                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 30 ngày trở lại"
                                }).data("kendoAlert").open();
                            }
                            break;
                        case 'item2':

                            reportText = 'PartnerForOneForMonth';

                            fromDate = $('#FromMonth').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToMonth').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            // Chỉ cho phép chọn trong 12 tháng
                            if ((fromDate.getFullYear() == toDate.getFullYear() && fromDate.getFullYear() == toDate.getFullYear())
                                || (toDate.getFullYear() == fromDate.getFullYear() + 1 && difference_In_Days < 12)) {

                                // Tạo url cho link
                                url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}&partnerID={5}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID, partnerID);
                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;

                            } else {
                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 12 tháng trở lại"
                                }).data("kendoAlert").open();
                            }
                            break;
                        default:
                            reportText = 'PartnerForOneForYear';

                            fromDate = $('#FromYear').data('kendoDatePicker').value();
                            fromDateConvert = kendo.toString(fromDate, "MM/dd/yyyy");

                            toDate = $('#ToYear').data('kendoDatePicker').value();
                            toDateConvert = kendo.toString(toDate, "MM/dd/yyyy");

                            // Tính số ngày chênh lệch
                            difference_In_Time = toDate.getTime() - fromDate.getTime();
                            difference_In_Days = difference_In_Time / (1000 * 3600 * 24);

                            if (toDate.getFullYear() - fromDate.getFullYear() > 4) {

                                $("<div></div>").kendoAlert({
                                    title: "Cảnh báo!",
                                    content: "Bạn chỉ được phép tìm kiếm trong 5 năm trở lại"
                                }).data("kendoAlert").open();
                            } else {

                                url = kendo.format("/Admin/{0}/{1}?fromDate={2}&toDate={3}&reportTypeID={4}&partnerID={5}", categoryText, reportText, fromDateConvert, toDateConvert, reportTypeID, partnerID);

                                // Set giá trị cho param1 và 2
                                param1 = fromDateConvert;
                                param2 = toDateConvert;
                            }
                            break;
                    }
                } else {

                    let gradationDicID = null;
                    let toYear = null;

                    let year = null;
                    let month = null;
                    // Trường hợp so sánh theo giai đoạn
                    // thời gian
                    switch (level3) {
                        case 'item1':
                            reportText = 'ReportDetailtGradationCompare';

                            gradationDicID = $("#gradation").data("kendoComboBox").value();

                            toYear = $('#ToYear').data('kendoDatePicker').value().getFullYear();

                            // Tạo url cho link
                            url = kendo.format("/Admin/{0}/{1}?gradation={2}&year={3}&reportTypeID={4}", categoryText, reportText, gradationDicID, toYear, reportTypeID);

                            // Set giá trị cho param1 và 2
                            param1 = gradationDicID;
                            param2 = toYear;
                            break;
                        case 'item2':

                            reportText = 'ReportDetailtGradationCompareForOne';

                            gradationDicID = $("#gradation").data("kendoComboBox").value();

                            toYear = $('#ToYear').data('kendoDatePicker').value().getFullYear();

                            // Tạo url cho link
                            url = kendo.format("/Admin/{0}/{1}?gradation={2}&year={3}&reportTypeID={4}&partnerID={5}", categoryText, reportText, gradationDicID, toYear, reportTypeID, partnerID);

                            // Set giá trị cho param1 và 2
                            param1 = gradationDicID;
                            param2 = toYear;
                            break;
                        case 'item3':

                            reportText = 'ReportDetailtCompareMonthForAll';

                            year = $('#FromMonth').data('kendoDatePicker').value().getFullYear();
                            month = $('#FromMonth').data('kendoDatePicker').value().getMonth() + 1;

                            url = kendo.format("/Admin/{0}/{1}?month={2}&year={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, month, year, reportTypeID, marketID);

                            // Set giá trị cho param1 và 2
                            param1 = month;
                            param2 = year;

                            break;
                        default:

                            reportText = 'ReportDetailtCompareMonthForOne';

                            year = $('#FromMonth').data('kendoDatePicker').value().getFullYear();
                            month = $('#FromMonth').data('kendoDatePicker').value().getMonth() + 1;

                            url = kendo.format("/Admin/{0}/{1}?month={2}&year={3}&reportTypeID={4}&marketID={5}", categoryText, reportText, month, year, reportTypeID, marketID);

                            // Set giá trị cho param1 và 2
                            param1 = month;
                            param2 = year;

                            break;
                    }
                }
            }

            if (url != null) {
                
                // Lưu giá trị vào local storage
                localStorage.removeItem('timeReport');
                // Nếu trường hợp là hình thức báo cáo là thị trường
                let timeReport = null;

                if (marketID != null) {

                    timeReport = kendo.format("{0}-{1}-{2}-{3}-{4}", param1, param2, level0, level2, marketID);
                } else {
                    timeReport = kendo.format("{0}-{1}-{2}-{3}-{4}", param1, param2, level0, level2, partnerID);
                }

                localStorage.timeReport = timeReport;

                window.location = url;
            }
        }
    }

    // Sự kiện click vào dropdownlist level1
    function onClickReportLevel2(e) {
        
        let level0 = $("#categories_Level0").data("kendoDropDownList").value();
        let level1 = $("#categories_Level1").data("kendoDropDownList").value();
        let level2 = $("#categories_Level2").data("kendoDropDownList").value();
        let level3 = $("#categories_Level3").data("kendoDropDownList").value();

        let itemData = e.dataItem;
        let countItemDetailt = 0;

        // Get thông tin của đối tác
        let partnerID = null;

        let value = localStorage.timeReport;
        let valueAutoComplete = localStorage.dataAutoComplete;

        // Trường hợp chọn giá trị từ dropdownlist Select
        if (itemData != undefined) {
            itemData = itemData.PartnerID;
        }

        if (value != undefined && valueAutoComplete != null && itemData == null) {

            let listData = value.split('-');
            let listDataAutoComplete = valueAutoComplete.split('-');
            //level3.value(listData[3]);
            //// Set lại dataItem
            //dataItem = level3.dataItem();
            if (listDataAutoComplete[0] == 'level0_item2') {
                itemData = listDataAutoComplete[2];
                countItemDetailt = listData[4];
                partnerID = listData[4];
            }
        }
        
        // Báo cáo chi tiết
        // Hiện dropdownlist thị trường
        if (level0 == 'level0_item2') {
            // Hình thức báo cáo theo thị trường
            if (level1 == 'item1' || level1 == 'item2') {
                // Loại hình - Tất cả
                if (itemData == 'item1') {

                    $('.categoriesMarket .categoriesMarketText').text("Thị trường: ");
                    $(".categoriesDetaitMarketID .k-dropdown").remove();

                    $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitMarket" style="width: 100%;float: left;"/>');
                    $('.categoriesDetaitMarketID').css('width', '24%');

                    $("#categoriesDetaitMarket").kendoDropDownList({

                        optionLabel: "Chọn thị trường...",
                        dataTextField: "MarketName",
                        dataValueField: "MarketCode",
                        dataSource: {
                            transport: {
                                read: {

                                    url: '@Url.Action("ListMarket", "ReportDetailtByMarket")',
                                    dataType: "json",
                                    contentType: "application/json",
                                    type: "POST",
                                }
                            },
                            //serverFiltering: true
                        },
                        value: countItemDetailt,
                    });
                } else if (itemData == 'item2') {
                    // Loại hình Từng
                    $('.categoriesMarket .categoriesMarketText').text("Thị trường: ");
                    $(".categoriesDetaitMarketID .k-dropdown").remove();

                    $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitMarket" style="width: 100%;float: left;"/>');
                    $('.categoriesDetaitMarketID').css('width', '24%');

                    $("#categoriesDetaitMarket").kendoDropDownList({

                        optionLabel: "Chọn thị trường...",
                        dataTextField: "MarketName",
                        dataValueField: "MarketCode",
                        dataSource: {
                            transport: {
                                read: {

                                    url: '@Url.Action("ListMarketForPartner", "ReportDetailtByMarket")',
                                    dataType: "json",
                                    contentType: "application/json",
                                    type: "POST",
                                }
                            },
                            //serverFiltering: true
                        },
                        //filter: "contains",
                        value: countItemDetailt,
                    });

                } else {
                    // Loại hình - So sánh
                }
            }

            // Hình thức báo cáo theo Đối tác
            if (level1 == 'item3' || level1 == 'item4') {

                // Loại hình - Tất cả
                if (itemData == 'item1') {

                    $('.categoriesMarket .categoriesMarketText').text("");
                    $(".categoriesDetaitMarketID .k-dropdown").remove();

                } else if (itemData == 'item2') {
                    // Loại hình Từng
                    $('.categoriesMarket .categoriesMarketText').text("Đối tác: ");
                    $(".categoriesDetaitMarketID .k-dropdown").remove();

                    $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitPartner" style="width: 100%;float: left;"/>');
                    $('.categoriesDetaitMarketID').css('width', '24%');

                    $("#categoriesDetaitPartner").kendoDropDownList({

                        //optionLabel: "Chọn đối tác...",
                        dataTextField: "PartnerName",
                        dataValueField: "PartnerCode",
                        height: 400,
                        dataSource: {
                            transport: {
                                read: {

                                    url: '@Url.Action("ListMarketForPartner", "Home")',
                                    dataType: "json",
                                    contentType: "application/json",
                                    type: "POST",
                                }
                            },
                            //serverFiltering: true
                        },
                        filter: "contains",
                        value: partnerID,
                    });

                } else {
                    // Loại hình - So sánh
                }
            }

        }
    }

    // Sự kiện click vào dropdownlist level1
    function onClickReportLevel0(e) {

        $('.categoriesMarket .categoriesMarketText').text("");
        $(".categoriesDetaitMarketID .k-dropdown").remove();
        // Xóa ngày tháng
        $(".k-datepicker").remove();
        // Xóa comboBox
        $(".k-combobox-clearable").remove();

        $('.timeReport .startTimeName').text("");
        $('.timeReport .endTimeName').text("");

    }
    // Data cho comboBox
    function filterDetailt() {

        return {
            reportID: $("#categoryDetailtLayout").val()
        };
    }

    function onSelectTimeReport(e) {

        let valueData = e.item;
        let dataItem = null;
        let listDataTimeReport = null;

        // Trường hợp tự auto Complete
        if (valueData == undefined) {
            valueData = true;
        }

        // Trường hợp chọn giá trị trên comboBox thời gian
        if (jQuery.type(valueData) == "object") {

            dataItem = this.dataItem(valueData);
        }

        let level0 = $("#categories_Level0").data("kendoDropDownList").value();
        let level1 = $("#categories_Level1").data("kendoDropDownList").value();
        let level2 = $("#categories_Level2").data("kendoDropDownList").value();
        let level3 = $("#categories_Level3").data("kendoDropDownList").value();

        // Xóa ngày tháng
        $(".k-datepicker").remove();
        // Xóa comboBox
        $(".k-combobox-clearable").remove();
        //// Tắt chọn thị trường
        //$("#categoriesDetaitMarket").data("kendoDropDownList").enable(false);

        if (valueData) {

            if (valueData == true) {

                let level3 = $("#categories_Level3").data("kendoDropDownList");
                dataItem = level3.dataItem();

                let value = localStorage.dataAutoComplete;
                if (value != undefined && dataItem.PartnerID == "") {

                    let listData = value.split('-');
                    level3.value(listData[3]);
                    // Set lại dataItem
                    dataItem = level3.dataItem();

                }
            }

            // Get value timeReport
            let valueTimeReport = localStorage.timeReport;
            if (valueTimeReport != undefined) {

                listDataTimeReport = valueTimeReport.split('-');
            }

            // Báo cáo tổng hợp với theo ngày hoặc báo cáo chi tiết theo Tất cả và từng
            if (level0 == 'level0_item1' && level2 == 'item1'
                || (level0 == 'level0_item2'
                    && (level2 == 'item1' || level2 == 'item2'))) {

                // Chọn báo cáo chi tiết
                let date = new Date();
                let timeStartNow = kendo.toString(date, "dd/MM/yyyy");
                let timeEndNow = kendo.toString(date, "dd/MM/yyyy");

                if (dataItem.PartnerID == 'item1') {

                    $('.timeReport .startTimeName').text("Từ ngày: ");
                    $('.timeReport .endTimeName').text("Đến ngày: ");

                    // Trường hợp có auto complete time
                    if (listDataTimeReport != null) {
                        // start time
                        let timeStartAutoComplete = listDataTimeReport[0];
                        let timeEndAutoComplete = listDataTimeReport[1];

                        if (listDataTimeReport[2] == level0 && listDataTimeReport[3] == level2) {

                            timeStartNow = kendo.format("{0}/{1}/{2}", timeStartAutoComplete.split('/')[1], timeStartAutoComplete.split('/')[0], timeStartAutoComplete.split('/')[2]);
                            timeEndNow = kendo.format("{0}/{1}/{2}", timeEndAutoComplete.split('/')[1], timeEndAutoComplete.split('/')[0], timeEndAutoComplete.split('/')[2]);

                        }
                    }

                    $('.timeStart').append(' <input id="FromDay" value=' + timeStartNow + 'style="width: 70%;float: left;" title = "datepicker"/>');
                    $("#FromDay").kendoDatePicker({

                        format: "dd/MM/yyyy",
                    });

                    $('.timeEnd').append(' <input id="ToDay" value=' + timeEndNow + 'style="width: 100%;" title = "datepicker"/>');
                    $("#ToDay").kendoDatePicker({

                        format: "dd/MM/yyyy",
                    });

                } else if (dataItem.PartnerID == 'item2') {

                    timeStartNow = kendo.toString(date, "MM/yyyy");
                    timeEndNow = kendo.toString(date, "MM/yyyy");

                    $('.timeReport .startTimeName').text("Từ Tháng: ");
                    $('.timeReport .endTimeName').text("Đến Tháng: ");

                    // Trường hợp có auto complete time
                    if (listDataTimeReport != null) {
                        // start time
                        let timeStartAutoComplete = listDataTimeReport[0];
                        let timeEndAutoComplete = listDataTimeReport[1];

                        if (listDataTimeReport[2] == level0 && listDataTimeReport[3] == level2) {

                            timeStartNow = kendo.format("{0}/{1}", timeStartAutoComplete.split('/')[0], timeStartAutoComplete.split('/')[2]);
                            timeEndNow = kendo.format("{0}/{1}", timeEndAutoComplete.split('/')[0], timeEndAutoComplete.split('/')[2]);
                        }
                    }

                    $('.timeStart').append(' <input id="FromMonth" value=' + timeStartNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                    $("#FromMonth").kendoDatePicker({
                        // defines the start view
                        start: "year",

                        // defines when the calendar should return date
                        depth: "year",
                        format: "MM/yyyy",
                    });

                    $('.timeEnd').append(' <input id="ToMonth" value=' + timeEndNow + 'style="width: 100%;" title = "monthpicker"/>');
                    $("#ToMonth").kendoDatePicker({
                        // defines the start view
                        start: "year",

                        // defines when the calendar should return date
                        depth: "year",
                        format: "MM/yyyy",
                    });
                } else {

                    timeStartNow = kendo.toString(date, "yyyy");
                    timeEndNow = kendo.toString(date, "yyyy");

                    $('.timeReport .startTimeName').text("Từ năm: ");
                    $('.timeReport .endTimeName').text("Đến năm: ");

                    // Trường hợp có auto complete time
                    if (listDataTimeReport != null || listDataTimeReport != '') {
                        // start time
                        let timeStartAutoComplete = listDataTimeReport[0];
                        let timeEndAutoComplete = listDataTimeReport[1];

                        if (listDataTimeReport[2] == level0 && listDataTimeReport[3] == level2) {

                            timeStartNow = kendo.format("{0}", timeStartAutoComplete.split('/')[2]);
                            timeEndNow = kendo.format("{0}", timeEndAutoComplete.split('/')[2]);
                        }
                    }

                    $('.timeStart').append(' <input id="FromYear" value=' + timeStartNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                    $("#FromYear").kendoDatePicker({
                        // defines the start view
                        start: "decade",

                        // defines when the calendar should return date
                        depth: "decade",
                        format: "yyyy",
                    });

                    $('.timeEnd').append(' <input id="ToYear" value=' + timeEndNow + 'style="width: 100%;" title = "monthpicker"/>');
                    $("#ToYear").kendoDatePicker({
                        // defines the start view
                        start: "decade",

                        // defines when the calendar should return date
                        depth: "decade",
                        format: "yyyy",
                    });
                }
            }

            // Trường hợp chọn giai đoạn
            // Báo cáo tổng hợp
            if (level0 == 'level0_item1' && level2 == 'item2') {

                let date = new Date();
                let timeNow = kendo.toString(date, "yyyy");
                let gradationAutoComplete = 0;


                if (dataItem.PartnerID == 'item1') {

                    $('.timeReport .startTimeName').text("Giai đoạn: ");
                    $('.timeReport .endTimeName').text("Năm: ");

                    // Trường hợp có auto complete time
                    if (listDataTimeReport != null || listDataTimeReport != '') {
                        // start time
                        if (listDataTimeReport[2] == level0 && listDataTimeReport[3] == level2) {

                            gradationAutoComplete = kendo.parseInt(listDataTimeReport[0]) - 1;
                            if (gradationAutoComplete > 3) {
                                gradationAutoComplete = 0;
                            }
                            let timeEndAutoComplete = listDataTimeReport[1];

                            timeNow = kendo.format("{0}", timeEndAutoComplete);
                        }
                    }

                    $('.timeStart').append(' <input id="gradation" placeholder="Chọn giai đoạn..." style="width: 44%;float: left;"/>');
                    $("#gradation").kendoComboBox({
                        dataTextField: "text",
                        dataValueField: "value",
                        dataSource: [
                            { text: "3 tháng đầu năm", value: "1" },
                            { text: "6 tháng đầu năm", value: "2" },
                            { text: "9 tháng", value: "3" },
                            { text: "12 tháng", value: "4" }
                        ],
                        filter: "contains",
                        suggest: true,
                        index: gradationAutoComplete
                    });

                    $('.timeEnd').append(' <input id="ToYear" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                    $("#ToYear").kendoDatePicker({
                        // defines the start view
                        start: "decade",

                        // defines when the calendar should return date
                        depth: "decade",
                        format: "yyyy",
                    });
                } else {

                    timeNow = kendo.toString(date, "MM/yyyy");

                    $('.timeReport .startTimeName').text("Giai đoạn: ");
                    $('.timeReport .endTimeName').text("");

                    // Trường hợp có auto complete time
                    if (listDataTimeReport != null || listDataTimeReport != '') {

                        if (listDataTimeReport[2] == level0 && listDataTimeReport[3] == level2) {

                            timeNow = kendo.format("{0}/{1}", listDataTimeReport[0], listDataTimeReport[1]);
                        }
                    }

                    $('.timeStart').append(' <input id="FromMonth" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                    $("#FromMonth").kendoDatePicker({
                        // defines the start view
                        start: "year",

                        // defines when the calendar should return date
                        depth: "year",
                        format: "MM/yyyy",
                    });
                }
            }

            // Trường hợp chọn loại báo cáo chi tiết theo giai đoạn và theo tháng
            // Trường hợp chọn giai đoạn
            // Báo cáo chi tiết

            if (level0 == 'level0_item2' && level2 == 'item3') {

                let date = new Date();
                let timeNow = kendo.toString(date, "yyyy");
                // Default đầu tiên
                let countItemDetailt = 0;
                let countItemDetailtMarket = 0;

                // Trường hợp hình thức báo cáo là thị trường
                if (level1 == 'item1' && level1 == 'item2') {

                    // Trường hợp chọn từ select level3
                    if (dataItem != null) {
                        timeNow = kendo.toString(date, "yyyy");
                        countItemDetailt = 0;
                    }

                    if (listDataTimeReport != null) {
                        countItemDetailt = kendo.parseInt(listDataTimeReport[0]) - 1;
                        timeNow = listDataTimeReport[1];
                        countItemDetailtMarket = listDataTimeReport[4];
                    }
                    
                    switch (dataItem.PartnerID) {
                        case 'item1':

                            $('.timeReport .startTimeName').text("Giai đoạn: ");
                            $('.timeReport .endTimeName').text("Năm: ");

                            $('.timeStart').append(' <input id="gradation" placeholder="Chọn giai đoạn..." style="width: 44%;float: left;"/>');
                            $("#gradation").kendoComboBox({
                                dataTextField: "text",
                                dataValueField: "value",
                                dataSource: [
                                    { text: "3 tháng đầu năm", value: "1" },
                                    { text: "6 tháng đầu năm", value: "2" },
                                    { text: "9 tháng", value: "3" },
                                    { text: "12 tháng", value: "4" }
                                ],
                                filter: "contains",
                                suggest: true,
                                index: countItemDetailt
                            });

                            $('.timeEnd').append(' <input id="ToYear" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                            $("#ToYear").kendoDatePicker({
                                // defines the start view
                                start: "decade",

                                // defines when the calendar should return date
                                depth: "decade",
                                format: "yyyy",
                            });

                            // Thị trường - Tất cả
                            $('.categoriesMarket .categoriesMarketText').text("Thị trường: ");
                            $(".categoriesDetaitMarketID .k-dropdown").remove();

                            $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitMarket" style="width: 100%;float: left;"/>');
                            $('.categoriesDetaitMarketID').css('width', '24%');

                            $("#categoriesDetaitMarket").kendoDropDownList({

                                optionLabel: "Chọn thị trường...",
                                dataTextField: "MarketName",
                                dataValueField: "MarketCode",
                                dataSource: {
                                    transport: {
                                        read: {

                                            url: '@Url.Action("ListMarket", "ReportDetailtByMarket")',
                                            dataType: "json",
                                            contentType: "application/json",
                                            type: "POST",
                                        }
                                    },
                                    //serverFiltering: true
                                },
                                value: countItemDetailtMarket,
                            });

                            break;
                        case 'item2':
                            // Tắt chọn thị trường
                            //$("#categoriesDetaitMarket").data("kendoDropDownList").enable(true);

                            $('.timeReport .startTimeName').text("Giai đoạn: ");
                            $('.timeReport .endTimeName').text("Năm: ");

                            $('.timeStart').append(' <input id="gradation" placeholder="Chọn giai đoạn..." style="width: 44%;float: left;"/>');
                            $("#gradation").kendoComboBox({
                                dataTextField: "text",
                                dataValueField: "value",
                                dataSource: [
                                    { text: "3 tháng đầu năm", value: "1" },
                                    { text: "6 tháng đầu năm", value: "2" },
                                    { text: "9 tháng", value: "3" },
                                    { text: "12 tháng", value: "4" }
                                ],
                                filter: "contains",
                                suggest: true,
                                index: countItemDetailt 
                            });

                            $('.timeEnd').append(' <input id="ToYear" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                            $("#ToYear").kendoDatePicker({
                                // defines the start view
                                start: "decade",

                                // defines when the calendar should return date
                                depth: "decade",
                                format: "yyyy",
                            });

                            // Loại hình Từng
                            $('.categoriesMarket .categoriesMarketText').text("Thị trường: ");
                            $(".categoriesDetaitMarketID .k-dropdown").remove();

                            $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitMarket" style="width: 100%;float: left;"/>');
                            $('.categoriesDetaitMarketID').css('width', '24%');

                            $("#categoriesDetaitMarket").kendoDropDownList({

                                optionLabel: "Chọn thị trường...",
                                dataTextField: "MarketName",
                                dataValueField: "MarketCode",
                                dataSource: {
                                    transport: {
                                        read: {

                                            url: '@Url.Action("ListMarketForPartner", "ReportDetailtByMarket")',
                                            dataType: "json",
                                            contentType: "application/json",
                                            type: "POST",
                                        }
                                    },
                                    //serverFiltering: true
                                },
                                //filter: "contains",
                                value: countItemDetailtMarket,
                            });

                            break;
                        case 'item3':
                            timeNow = kendo.toString(date, "MM/yyyy");
                            let month = parseInt(listDataTimeReport[0] - 1);
                            let year = listDataTimeReport[1];

                            if (month != null && year != null) {
                                timeNow = kendo.toString(new Date(year, month, 01), "MM/yyyy");
                            }

                            $('.timeReport .startTimeName').text("Giai đoạn: ");
                            $('.timeReport .endTimeName').text("");

                            $('.timeStart').append(' <input id="FromMonth" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                            $("#FromMonth").kendoDatePicker({
                                // defines the start view
                                start: "year",

                                // defines when the calendar should return date
                                depth: "year",
                                format: "MM/yyyy",
                            });

                            // Thị trường - Tất cả
                            $('.categoriesMarket .categoriesMarketText').text("Thị trường: ");
                            $(".categoriesDetaitMarketID .k-dropdown").remove();

                            $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitMarket" style="width: 100%;float: left;"/>');
                            $('.categoriesDetaitMarketID').css('width', '24%');

                            $("#categoriesDetaitMarket").kendoDropDownList({

                                optionLabel: "Chọn thị trường...",
                                dataTextField: "MarketName",
                                dataValueField: "MarketCode",
                                dataSource: {
                                    transport: {
                                        read: {

                                            url: '@Url.Action("ListMarket", "ReportDetailtByMarket")',
                                            dataType: "json",
                                            contentType: "application/json",
                                            type: "POST",
                                        }
                                    },
                                    //serverFiltering: true
                                },
                                value: countItemDetailtMarket,
                            });

                            break;
                        default:
                            timeNow = kendo.toString(date, "MM/yyyy");

                            let toMonth = parseInt(listDataTimeReport[0] - 1);
                            let toYear = listDataTimeReport[1];

                            if (toMonth != null && toYear != null && !isNaN(toMonth) && !isNaN(toYear)) {
                                timeNow = kendo.toString(new Date(toYear, toMonth, 01), "MM/yyyy");
                            }
                            // Tắt chọn thị trường
                            //$("#categoriesDetaitMarket").data("kendoDropDownList").enable(true);
                            $('.timeReport .startTimeName').text("Giai đoạn: ");
                            $('.timeReport .endTimeName').text("");

                            $('.timeStart').append(' <input id="FromMonth" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                            $("#FromMonth").kendoDatePicker({
                                // defines the start view
                                start: "year",

                                // defines when the calendar should return date
                                depth: "year",
                                format: "MM/yyyy",
                            });

                            // Loại hình Từng
                            $('.categoriesMarket .categoriesMarketText').text("Thị trường: ");
                            $(".categoriesDetaitMarketID .k-dropdown").remove();

                            $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitMarket" style="width: 100%;float: left;"/>');
                            $('.categoriesDetaitMarketID').css('width', '24%');

                            $("#categoriesDetaitMarket").kendoDropDownList({

                                optionLabel: "Chọn thị trường...",
                                dataTextField: "MarketName",
                                dataValueField: "MarketCode",
                                dataSource: {
                                    transport: {
                                        read: {

                                            url: '@Url.Action("ListMarketForPartner", "ReportDetailtByMarket")',
                                            dataType: "json",
                                            contentType: "application/json",
                                            type: "POST",
                                        }
                                    },
                                    //serverFiltering: true
                                },
                                //filter: "contains",
                                value: countItemDetailtMarket,
                            });

                            break;
                    }
                }


                // Trường hợp hình thức báo cáo là Đối tác
                if (level1 == 'item3' || level1 == 'item4') {

                    // Trường hợp chọn từ select level3
                    if (dataItem != null) {
                        timeNow = kendo.toString(date, "yyyy");
                        countItemDetailt = 0;
                    }

                    if (listDataTimeReport != null) {
                        countItemDetailt = kendo.parseInt(listDataTimeReport[0]) - 1;
                        timeNow = listDataTimeReport[1];
                        // kiểm tra timenow có bị lỗi không
                        let checkTimeNow = timeNow.split('/');

                        if (checkTimeNow.length > 1) {
                            timeNow = kendo.toString(date, "yyyy");
                        }

                        countItemDetailtMarket = listDataTimeReport[4];
                    }
                    
                    switch (dataItem.PartnerID) {
                        case 'item1':

                            $('.timeReport .startTimeName').text("Giai đoạn: ");
                            $('.timeReport .endTimeName').text("Năm: ");

                            $('.timeStart').append(' <input id="gradation" placeholder="Chọn giai đoạn..." style="width: 44%;float: left;"/>');
                            $("#gradation").kendoComboBox({
                                dataTextField: "text",
                                dataValueField: "value",
                                dataSource: [
                                    { text: "3 tháng đầu năm", value: "1" },
                                    { text: "6 tháng đầu năm", value: "2" },
                                    { text: "9 tháng", value: "3" },
                                    { text: "12 tháng", value: "4" }
                                ],
                                filter: "contains",
                                suggest: true,
                                index: countItemDetailt
                            });

                            $('.timeEnd').append(' <input id="ToYear" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                            $("#ToYear").kendoDatePicker({
                                // defines the start view
                                start: "decade",

                                // defines when the calendar should return date
                                depth: "decade",
                                format: "yyyy",
                            });

                            // Đối tác - Tất cả
                            $('.categoriesMarket .categoriesMarketText').text("");
                            $(".categoriesDetaitMarketID .k-dropdown").remove();
                            
                            break;
                        case 'item2':

                            $('.timeReport .startTimeName').text("Giai đoạn: ");
                            $('.timeReport .endTimeName').text("Năm: ");

                            $('.timeStart').append(' <input id="gradation" placeholder="Chọn giai đoạn..." style="width: 44%;float: left;"/>');
                            $("#gradation").kendoComboBox({
                                dataTextField: "text",
                                dataValueField: "value",
                                dataSource: [
                                    { text: "3 tháng đầu năm", value: "1" },
                                    { text: "6 tháng đầu năm", value: "2" },
                                    { text: "9 tháng", value: "3" },
                                    { text: "12 tháng", value: "4" }
                                ],
                                filter: "contains",
                                suggest: true,
                                index: countItemDetailt 
                            });

                            $('.timeEnd').append(' <input id="ToYear" value=' + timeNow + 'style="width: 100%;" title = "monthpicker"/>');
                            $("#ToYear").kendoDatePicker({
                                // defines the start view
                                start: "decade",

                                // defines when the calendar should return date
                                depth: "decade",
                                format: "yyyy",
                            });

                            // Loại hình Từng
                            $('.categoriesMarket .categoriesMarketText').text("Thị trường: ");
                            $(".categoriesDetaitMarketID .k-dropdown").remove();

                            $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitMarket" style="width: 100%;float: left;"/>');
                            $('.categoriesDetaitMarketID').css('width', '24%');

                            $("#categoriesDetaitMarket").kendoDropDownList({

                                optionLabel: "Chọn thị trường...",
                                dataTextField: "MarketName",
                                dataValueField: "MarketCode",
                                dataSource: {
                                    transport: {
                                        read: {

                                            url: '@Url.Action("ListMarketForPartner", "ReportDetailtByMarket")',
                                            dataType: "json",
                                            contentType: "application/json",
                                            type: "POST",
                                        }
                                    },
                                    //serverFiltering: true
                                },
                                //filter: "contains",
                                value: countItemDetailtMarket,
                            });

                            break;
                        case 'item3':
                            timeNow = kendo.toString(date, "MM/yyyy");
                            let month = parseInt(listDataTimeReport[0] - 1);
                            let year = listDataTimeReport[1];

                            if (month != null && year != null) {
                                timeNow = kendo.toString(new Date(year, month, 01), "MM/yyyy");
                            }

                            $('.timeReport .startTimeName').text("Giai đoạn: ");
                            $('.timeReport .endTimeName').text("");

                            $('.timeStart').append(' <input id="FromMonth" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                            $("#FromMonth").kendoDatePicker({
                                // defines the start view
                                start: "year",

                                // defines when the calendar should return date
                                depth: "year",
                                format: "MM/yyyy",
                            });

                            // Thị trường - Tất cả
                            $('.categoriesMarket .categoriesMarketText').text("Thị trường: ");
                            $(".categoriesDetaitMarketID .k-dropdown").remove();

                            $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitMarket" style="width: 100%;float: left;"/>');
                            $('.categoriesDetaitMarketID').css('width', '24%');

                            $("#categoriesDetaitMarket").kendoDropDownList({

                                optionLabel: "Chọn thị trường...",
                                dataTextField: "MarketName",
                                dataValueField: "MarketCode",
                                dataSource: {
                                    transport: {
                                        read: {

                                            url: '@Url.Action("ListMarket", "ReportDetailtByMarket")',
                                            dataType: "json",
                                            contentType: "application/json",
                                            type: "POST",
                                        }
                                    },
                                    //serverFiltering: true
                                },
                                value: countItemDetailtMarket,
                            });

                            break;
                        default:
                            timeNow = kendo.toString(date, "MM/yyyy");

                            let toMonth = parseInt(listDataTimeReport[0] - 1);
                            let toYear = listDataTimeReport[1];

                            if (toMonth != null && toYear != null && !isNaN(toMonth) && !isNaN(toYear)) {
                                timeNow = kendo.toString(new Date(toYear, toMonth, 01), "MM/yyyy");
                            }
                            // Tắt chọn thị trường
                            //$("#categoriesDetaitMarket").data("kendoDropDownList").enable(true);
                            $('.timeReport .startTimeName').text("Giai đoạn: ");
                            $('.timeReport .endTimeName').text("");

                            $('.timeStart').append(' <input id="FromMonth" value=' + timeNow + 'style="width: 70%;float: left;" title = "monthpicker"/>');
                            $("#FromMonth").kendoDatePicker({
                                // defines the start view
                                start: "year",

                                // defines when the calendar should return date
                                depth: "year",
                                format: "MM/yyyy",
                            });

                            // Loại hình Từng
                            $('.categoriesMarket .categoriesMarketText').text("Thị trường: ");
                            $(".categoriesDetaitMarketID .k-dropdown").remove();

                            $('.categoriesDetaitMarketID').append(' <input id="categoriesDetaitMarket" style="width: 100%;float: left;"/>');
                            $('.categoriesDetaitMarketID').css('width', '24%');

                            $("#categoriesDetaitMarket").kendoDropDownList({

                                optionLabel: "Chọn thị trường...",
                                dataTextField: "MarketName",
                                dataValueField: "MarketCode",
                                dataSource: {
                                    transport: {
                                        read: {

                                            url: '@Url.Action("ListMarketForPartner", "ReportDetailtByMarket")',
                                            dataType: "json",
                                            contentType: "application/json",
                                            type: "POST",
                                        }
                                    },
                                    //serverFiltering: true
                                },
                                //filter: "contains",
                                value: countItemDetailtMarket,
                            });

                            break;
                    }
                }
                
            }
        }
    }

    function onDataBoundTimeReport(e) {

        //onSelectTimeReport(e);
        level3 = $("#categories_Level3").data("kendoDropDownList").value();
        if (level3 != '') {

            onSelectTimeReport(e);
            onClickReportLevel2(e);
        }
    }
    // Change radio
    $("input[name='report']").change(function () {

        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = $('input[name="report"]:checked').val();
        localStorage.reportTypeLS = reportTypeLS;
        // Do something interesting here
    });
</script>

<style>
    .btn-k-primary {
        color: #fff;
        background-color: #4e73df;
        border-color: #4e73df;
    }

    .kendoDanger {
        background-color: blue;
        color: white;
    }

        .kendoDanger:hover {
            background-color: darkblue;
            color: white;
        }
</style>