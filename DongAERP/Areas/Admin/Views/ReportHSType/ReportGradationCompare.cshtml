@using Kendo.Mvc.UI
@using System.Collections.Generic;
@using System.Web.Mvc;
@using DongA.Entities;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string NameUrl = ViewBag.NameURL;

    var listData = (List<string>)ViewData["listData"];

    string gradation = string.Empty;
    string toYear = string.Empty;
    string reportTypeID = string.Empty;

    string titleGradatonYear = string.Empty;
    string titleGradatonLastYear = string.Empty;

    if (listData != null)
    {
        gradation = listData[0];
        toYear = listData[1];
        reportTypeID = listData[2];

        string text = " tháng đầu năm";
        switch (gradation)
        {
            case "1":
                text = string.Concat("3", text);
                break;
            case "2":
                text = string.Concat("6", text);
                break;
            case "3":
                text = string.Concat("9", text);
                break;
            default:
                text = string.Concat("12", text);
                break;
        }

        titleGradatonYear = string.Format("Lũy kế {0} {1}", text, toYear);
        titleGradatonLastYear = string.Format("Lũy kế {0} {1}", text, int.Parse(toYear) - 1);
    }
}
<script src="~/Areas/Admin/Scripts/ReportHS/ReportHSType.js"></script>
<h1 class="h3 mb-4 text-gray-800">Chi tiết- So sánh - Giai đoạn</h1>

<h6 class="m-0 font-weight-bold text-primary">@NameUrl</h6>
<hr class="sidebar-divider">

<div style=" display: flex; ">

    <ul class="search-item" style="width: 100%;margin-top: 5px;margin-bottom: 0px;">
        @*<a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm search-grid-gradation" href="#" style="float: left;"><i class="fas fa-search fa-sm text-white-50"></i> Tìm kiếm</a>*@
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm print-excel-gradation" href="#" style=" float: right;"><i class="fas fa-download fa-sm text-white-50"></i> In báo cáo Excel</a>
    </ul>
</div>
<hr class="sidebar-divider">
<p class="mb-4">1. Theo hồ sơ chi trả loại hình dịch vụ</p>
<div class="row">
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ cột Loại hình dịch vụ</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationCompare>()
                                .Name("chartGradationCompare")
                                .Title("hồ sơ theo loại hình dịch vụ")
                                .Legend(legend => legend
                                    .Position(ChartLegendPosition.Bottom)
                                )
                                .DataSource(ds => ds
                                    .Read(read => read.Action("SearchDataChartCompare", "ReportHSType").Data("onDataReportTypeID"))
                                    .Group(group => group.Add(model => model.NameGradationCompare))
                                    )

                                .Series(series =>
                                {
                                    series.Column(model => model.amount).Name("#= group.value #").CategoryField("NameType");

                                })
                                .SeriesColors("#FFBF00", "#40FF00")
                                .CategoryAxis(axis => axis
                                    //.Labels(labels => labels.Format("{0}"))
                                    .MajorGridLines(lines => lines.Visible(false))
                                )
                                .ValueAxis(axis => axis
                                    .Numeric()
                                    .Labels(labels => labels.Format("{0:N0}"))
                                    .Line(line => line.Visible(false))
                                )
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0:N0}")
                                    .Template("#= series.name #: #= kendo.format('{0:N2}', value) #")
                                )
                                .Events(events => events
                                    .DataBound("Report.gradationChartDataBound")
                                )
                    )
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu Loại hình dịch vụ</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<DongA.Entities.Report>()
                            .Name("gridGradationCompare")
                            .HtmlAttributes(new { style = " overflow: auto; " })
                            .Columns(columns =>
                            {
                                columns.Bound(c => c.GradationID).Title("Giai đoạn").Width(250).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: center;" });
                                columns.Bound(c => c.DSChiQuay).Title("DS chi quầy").Width(100).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.DSChiNha).Title("DS chi nhà").Width(100).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.DSCK).Title("DS chuyển khoản").Width(100).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.TongDS).Title("Tổng hồ sơ").Width(200).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right; font-weight: 700;" });
                            })
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                //.Data("DayReport.GetAdditionalData")
                                //.PageSize(31)
                                .Read(read => read.Action("SearchGradationCompare", "ReportHSType").Data("onDataReportTypeID"))
                            )
                            .Sortable() // Enable sorting
                            .Events(events => events
                                .DataBound("onDataBound")
                            )
                )
            </div>
        </div>
    </div>
</div>

<hr class="sidebar-divider">
<p class="mb-4">2. Theo tỉ trọng chi trả loại hình dịch vụ </p>
<div class="row">
    <div class="col-lg-6">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ Tỉ trọng chi trả theo loại hình dịch vụ năm hiện tại (%)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationChartPie>()
                                .Name("chartGradationPercentYear")
                                        .Title(title => title
                                            .Text(titleGradatonYear)
                                            .Position(ChartTitlePosition.Bottom))
                                .Legend(legend => legend
                                    .Visible(false)
                                )
                                .DataSource(ds => ds.Read(read => read.Action("SearchPieCompareProportionYear", "ReportHSType").Data("onDataReportTypeID")))
                                .ChartArea(chart => chart
                                    .Background("transparent")
                                    )
                                //.HtmlAttributes(new { style="background: center no-repeat url(" + @Url.Content("~/Content/shared/world-map.png")})
                                .Series(series =>
                                {
                                    series.Pie(model => model.value, model => model.category, model => model.color)
                                    .Labels(labels => labels
                                        .Template("#= category #: \n #= value#%")
                                        .Background("transparent")
                                        .Visible(true)
                                        .Font("bold 12px sans-serif")
                                    );
                                        //.StartAngle(150);
                                    })
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0}%")
                                )
                    )
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ Tỉ trọng chi trả theo loại hình dịch vụ năm trước (%)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationChartPie>()
                                .Name("chartGradationPercentLastYear")
                                        .Title(title => title
                                            .Text(titleGradatonLastYear)
                                            .Position(ChartTitlePosition.Bottom))
                                .Legend(legend => legend
                                    .Visible(false)
                                )
                                .DataSource(ds => ds.Read(read => read.Action("SearchPieCompareProportionLastYear", "ReportHSType").Data("onDataReportTypeID")))
                                .ChartArea(chart => chart
                                    .Background("transparent")
                                    )
                                //.HtmlAttributes(new { style="background: center no-repeat url(" + @Url.Content("~/Content/shared/world-map.png")})
                                .Series(series =>
                                {
                                    series.Pie(model => model.value, model => model.category, model => model.color)
                                    .Labels(labels => labels
                                        .Template("#= category #: \n #= value#%")
                                        .Background("transparent")
                                        .Visible(true)
                                        .Font("bold 12px sans-serif")
                                    );
                                        //.StartAngle(150);
                                    })
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0}%")
                                )
                    )
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu Loại hình dịch vụ (%)</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<DongA.Entities.Report>()
                            .Name("gridGradationComparePercent")
                            .HtmlAttributes(new { style = " overflow: auto; " })
                            .Columns(columns =>
                            {
                                columns.Bound(c => c.GradationID).Title("Giai đoạn").Width(250).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: center;" });
                                columns.Bound(c => c.DSChiQuay).Title("HS chi quầy(%)").Format("{0:n2} %").Width(100).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.DSChiNha).Title("HS chi nhà(%)").Format("{0:n2} %").Width(100).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.DSCK).Title("HS chuyển khoản(%)").Format("{0:n2} %").Width(100).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" });
                                columns.Bound(c => c.TongDS).Title("Tổng hồ sơ(%)").Format("{0:n0} %").Width(200).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right; font-weight: 700;" });
                            })
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("SearchGradationComparePercentGrid", "ReportHSType").Data("onDataReportTypeID"))
                            )
                            .Sortable() // Enable sorting
                            .Events(events => events
                                .DataBound("onDataBoundPercent")
                            )
                )
            </div>
        </div>
    </div>
</div>

@*<style>
        tr.k-grouping-row {
            display: none;
        }
    </style>*@

<script type="text/javascript">

    function GradationCompareDSGrid() {

        let gradationDic = $("#gradation").data("kendoComboBox").value() + "," + $("#gradation").data("kendoComboBox").text();
        return {
            Gradation: gradationDic,
            ToYear: $('#ToYear').data('kendoDatePicker').value().getFullYear(),
        };
    }

    // In đậm cho Grid
    function onDataBound(arg) {

        let lastRow = $('#gridGradationCompare tbody tr');
        $(lastRow[lastRow.length - 1]).css('font-weight', 'bold');
        $(lastRow[lastRow.length - 2]).css('font-weight', 'bold');

        // Tô màu dòng record có tỉ lệ tăng giảm
        let trGrid = $('#gridGradationCompare tbody tr');
        for (let i = 2; i < trGrid.length; i++) {

            let tdGrid = $(trGrid[i]).find('td');
            for (let j = 1; j < tdGrid.length; j++) {
                tdCellValue = kendo.parseFloat(tdGrid[j].textContent);

                // Điều kiện nếu td là âm thì tô màu đỏ ngược lại màu Xanh
                if (tdCellValue != null) {
                    $(tdGrid[j]).css('color', 'red');
                    if (tdCellValue > 0) {
                        $(tdGrid[j]).css('color', 'green');
                    }
                }
            }
        }
    }

    // In đậm cho Grid
    function onDataBoundPercent(arg) {

        let lastRow = $('#gridGradationComparePercent tbody tr');
        $(lastRow[lastRow.length - 1]).css('font-weight', 'bold');

        // Tô màu dòng record có tỉ lệ tăng giảm
        let trGrid = $('#gridGradationComparePercent tbody tr');
        for (let i = 2; i < trGrid.length; i++) {

            let tdGrid = $(trGrid[i]).find('td');

            // Theo % thì loại đối tượng tổng ra
            for (let j = 1; j < tdGrid.length - 1; j++) {
                tdCellValue = kendo.parseFloat(tdGrid[j].textContent);

                // Điều kiện nếu td là âm thì tô màu đỏ ngược lại màu Xanh
                if (tdCellValue != null) {
                    $(tdGrid[j]).css('color', 'red');
                    if (tdCellValue > 0) {
                        $(tdGrid[j]).css('color', 'green');
                    }
                }
            }
        }
    }

    function onDataReportTypeID(arg) {

        return {
            gradation: "@gradation",
            year: "@toYear",
            reportTypeID: "@reportTypeID"
        };
    }

    // Change radio
    $("input[name='reportDate']").change(function () {

        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = $('input[name="reportDate"]:checked').val();
        localStorage.reportTypeLS = reportTypeLS;
        // Do something interesting here
    });
</script>