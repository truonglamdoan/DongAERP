@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string NameUrl = string.Concat(ViewBag.NameURL, "Theo ngày");

    var listData = (List<string>)ViewData["listData"];

    string fromDate = string.Empty;
    string toDate = string.Empty;
    string reportTypeID = string.Empty;
    string marketID = string.Empty;

    if (listData != null)
    {
        fromDate = listData[0];
        toDate = listData[1];
        reportTypeID = listData[2];
        marketID = listData[3];

    }
    else
    {
        fromDate = DateTime.Now.ToString("dd/MM/yyyy");
        toDate = DateTime.Now.ToString("dd/MM/yyyy");
    }
}
<script src="~/Areas/Admin/Scripts/ReportTCKT/DateReportTCKT.js"></script>
<h1 class="h3 mb-4 text-gray-800">Chi tiết- Theo Tháng</h1>

<h6 class="m-0 font-weight-bold text-primary">@NameUrl</h6>

<hr class="sidebar-divider">
<div style=" display: flex; ">

    <ul class="search-item" style="width: 100%;margin-top: 5px;margin-bottom: 0px;">
        @*<a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm search-grid" href="#" style="float: left;"><i class="fas fa-search fa-sm text-white-50"></i> Tìm kiếm</a>*@
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm print-excel-month" href="#" style=" float: right;"><i class="fas fa-download fa-sm text-white-50"></i> In báo cáo Excel</a>
    </ul>
</div>
<hr class="sidebar-divider" style=" margin-top: 0px; margin-bottom: 15px; ">
<div class="row">

    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu doanh số</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<dynamic>()
                            .Name("gridReportTCKTForMonth")
                            .HtmlAttributes(new { style = " overflow: auto; " })
                            .Columns(columns =>
                            {
                                if (!string.IsNullOrEmpty(fromDate) && !string.IsNullOrEmpty(toDate))
                                {

                                    columns.Bound("MarketName").Hidden()
                                            .ClientGroupHeaderTemplate("#= value #");
                                    columns.Bound("PartnerName").Title("Thị trường").Width(250).Locked(true)
                                        .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                        .HtmlAttributes(new { style = " text-align: center;" })
                                        .ClientGroupFooterTemplate("Tổng")
                                        .ClientFooterTemplate("Tổng tất cả");

                                    DateTime fromDay = DateTime.Parse(fromDate);
                                    DateTime toDay = DateTime.Parse(toDate);

                                    for (int i = fromDay.Month; i < toDay.Month; i++)
                                    {
                                        string nameDate = string.Format("COL{0}", i.ToString("00"));

                                        columns.Bound(nameDate).Title(string.Format("Tháng {0}", i.ToString("00"))).Width(200).Format("{0:N2}")
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;" })
                                            .ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,'0,00.00')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,'0,00.00')#</div>");
                                    }

                                    columns.Bound("TongDS").Title("Tổng").Width(200).Format("{0:N2}")
                                            .HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" })
                                            .HtmlAttributes(new { style = " text-align: right;font-weight: 700;" })
                                            .ClientGroupFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,'0,00.00')#</div>")
                                            .ClientFooterTemplate("<div style='float: right;'>#= kendo.toString(sum,'0,00.00')#</div>");
                                }


                            })
                            .Scrollable(scrollable => scrollable.Height("600px"))
                            .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .ServerOperation(false)
                                    .Group(groups => groups.Add("MarketName", typeof(string)))
                                    .Aggregates(aggregates =>
                                    {
                                        DateTime fromDay = DateTime.Parse(fromDate);
                                        DateTime toDay = DateTime.Parse(toDate);

                                        for (int i = fromDay.Month; i < toDay.Month; i++)
                                        {
                                            string nameDate = string.Format("COL{0}", i.ToString("00"));
                                            aggregates.Add(nameDate, typeof(double)).Sum();
                                        }
                                        // Sum tổng
                                        aggregates.Add("TongDS", typeof(double)).Sum();
                                    })
                                    .Read(read => read.Action("SearchReportMonth", "ReportTCKTMarket")
                                    .Data("onDataReportTypeID")
                                )
                            //.Read(read => read.Action("SearchReportDay", "Report").Data("DayReport.GetAdditionalData()"))
                            )
                            .Sortable() // Enable sorting
                            .Events(events => events
                                .DataBound("onDataBound")
                            )
                )
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function onDataBound(arg) {

        let lastRow = $('#gridReportDay tbody tr');
        $(lastRow[lastRow.length - 1]).css('font-weight', 'bold');
        $('.k-pager-numbers-wrap .k-pager-numbers').css('display', 'none');

    }

    function onDataReportTypeID(arg) {

        return {
            fromDate: "@fromDate",
            toDate: "@toDate",
            reportTypeID: "@reportTypeID",
            marketID: "@marketID"
        };
    }

    // Change radio
    $("input[name='reportDate']").change(function () {

        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = $('input[name="reportDate"]:checked').val();
        localStorage.reportTypeLS = reportTypeLS;
    // Do something interesting here
    });

</script>

@*<style>
        tr.k-grouping-row {
            display: none;
        }
    </style>*@