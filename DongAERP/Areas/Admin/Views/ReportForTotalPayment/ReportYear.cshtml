@using Kendo.Mvc.UI
@using System.Collections.Generic;
@using System.Web.Mvc;
@using DongA.Entities;
@using System.Data;
@model System.Data.DataTable

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string NameUrl = ViewBag.NameURL;

    string monthYear = string.Concat(DateTime.Today.ToString("MMMM"), " ", DateTime.Today.ToString("yyyy"));
    int toYear = DateTime.Today.Year;
}
<script src="~/Areas/Admin/Scripts/ReportForTotalPayment.js"></script>
<h1 class="h3 mb-4 text-gray-800">Chi tiết- Theo Năm</h1>

<h6 class="m-0 font-weight-bold text-primary">@NameUrl</h6>
<hr class="sidebar-divider">
<div style=" display: inline; margin-right: 10%; ">
    @(Html.Kendo().RadioButton().Name("TotalReportBody").Checked(true).Value(2).HtmlAttributes(new { @name = "reportDate" }).Label("Tổng hợp"))
</div>
<div style=" display: inline; margin-right: 10%; ">
    @(Html.Kendo().RadioButton().Name("DABReportBody").Value(0).HtmlAttributes(new { @name = "reportDate" }).Label("DAB"))
</div>
<div style=" display: inline; margin-right: 10%; ">
    @(Html.Kendo().RadioButton().Name("DAMReportBody").Value(1).HtmlAttributes(new { @name = "reportDate" }).Label("DAMTC"))
</div>
<hr class="sidebar-divider">
<div style=" display: flex; ">
    <ul style="width: 30%;position: absolute;display: block;">
        <span style="float: left;margin-right: 30px;margin-top: 5px;">Từ năm: </span>
        <span>
            @(Html.Kendo().DatePicker()
                                                      .Name("FromYear")
                                                      .Start(CalendarView.Decade)
                                                      .Depth(CalendarView.Decade)
                                                      .Format("yyyy")
                                                      .Value(DateTime.Today)
                                                      .DateInput()
                                                      .HtmlAttributes(new { style = "width: 70%;float: left;", title = "monthpicker" })
            )
        </span>
    </ul>
    <ul style=" margin-left: 35%; ">
        <span style="margin-left: 0%;margin-right: 30px;display: inline;">Đến năm: </span>
        <span style=" display: inline-flex; ">
            @(Html.Kendo().DatePicker()
                                                    .Name("ToYear")
                                                    .Start(CalendarView.Decade)
                                                    .Depth(CalendarView.Decade)
                                                    .Format("yyyy")
                                                    .Value(DateTime.Today)
                                                    .DateInput()
                                                      .HtmlAttributes(new { style = "width: 100%", title = "monthpicker" })
            )
        </span>
    </ul>
    @*<ul style="display: inline; " class="search-item">*@
    <ul class="search-item" style=" width: 27%;margin-top: 5px; ">
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm search-grid-year" href="#" style="float: left;"><i class="fas fa-search fa-sm text-white-50"></i> Tìm kiếm</a>
        <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm print-excel-year" href="#" style=" float: right;"><i class="fas fa-download fa-sm text-white-50"></i> In báo cáo Excel</a>
    </ul>
</div>
    <hr class="sidebar-divider">
    <div class="row">
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ đường Doanh số chi trả (USD)</h6>
            </div>
            <div class="card-body">
                <div class="demo-section k-content wide">
                    @(Html.Kendo().Chart<DongA.Entities.GradationCompare>()
                        .Name("lineChartReportTotalPaymentForYear")
                        .Title("Tổng doanh số chi trả (Quy USD)")
                        .DataSource(dataSource => dataSource
                            .Read(read => read.Action("LineChartTotalPaymentReportForYear", "ReportForTotalPayment").Data("onDataReportTypeID"))
                            .Group(group => group.Add(model => model.NameGradationCompare))
                        )
                        .ChartArea(chartArea =>
                            {
                                chartArea.Height(550);
                            })
                        .Series(series => {
                            series.Line(model => model.amount)
                                .Name("#= group.value #").CategoryField("NameType");
                        })
                        .SeriesColors("#0000FF", "#A52A2A", "#008B8B", "#006400", "#FF8C00")
                        .Legend(legend => legend
                            .Position(ChartLegendPosition.Bottom)
                        )
                        .CategoryAxis(axis => axis
                            .Labels(labels => labels.Rotation(-45))
                            .Crosshair(c => c.Visible(true))
                            .MajorGridLines(lines => lines.Visible(false))
                        )
                        .ValueAxis(axis => axis.Numeric()
                            .Labels(labels => labels.Format("{0:N2}"))
                        //.MajorUnit(10000)
                        )
                        .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Shared(true)
                            .Format("{0:N2}")
                        )
                    ) 
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6" style=" flex: none; max-width: none; ">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bảng số liệu Doanh số chi trả (USD)</h6>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<dynamic>()
                                        .Name("gridReportTotalPaymentForYear")
                                        .HtmlAttributes(new { style = " overflow: auto; " })
                                        .Columns(columns =>
                                        {
                                            Dictionary<string, string> listName = new Dictionary<string, string>();
                                            listName.Add("ReportID", "");
                                            listName.Add("year1", toYear.ToString());
                                            listName.Add("year2", (toYear + 1).ToString());
                                            listName.Add("year3", (toYear + 2).ToString());
                                            listName.Add("year4", (toYear + 3).ToString());
                                            listName.Add("year5", (toYear + 4).ToString());
                                            listName.Add("Year", "Year");

                                            foreach (DataColumn col in Model.Columns)
                                            {
                                                if (listName.ContainsKey(col.ColumnName))
                                                {
                                                    if (col.ColumnName.Equals("ReportID"))
                                                    {
                                                        columns.Bound(col.ColumnName).Title(listName[col.ColumnName]).HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: center;" });
                                                    }
                                                    else if (col.ColumnName.Equals("Year"))
                                                    {
                                                        columns.Bound(col.ColumnName).Title(listName[col.ColumnName]).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" }).Format("{0:N2}").Visible(true);
                                                    }
                                                    else
                                                    {
                                                        columns.Bound(col.ColumnName).Title(listName[col.ColumnName]).Format("{0:n2}").HeaderHtmlAttributes(new { style = "text-align: center;font-weight: 700;" }).HtmlAttributes(new { style = " text-align: right;" }).Format("{0:N2}");
                                                    }
                                                }
                                            }
                                        })
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .Read(read => read.Action("ReportYear", "ReportForTotalPayment").Data("onDataReportTypeID"))
                                        )
                                        .Sortable() // Enable sorting
                                        .Events(events => events
                                            .DataBound("onDataBound")
                                        )
                )
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function onDataBound(arg) {

        let lastRow = $('#gridReportTotalPaymentForYear tbody tr');
        $(lastRow[lastRow.length - 1]).css('font-weight', 'bold');

        debugger;
        // Hide column
        let grid = $('#gridReportTotalPaymentForYear').data('kendoGrid');

        // get list year
        let year = grid.dataSource.data()[0].Year;
        let listYear = year.split('_');
        let count = 1;
        let columns = grid.columns;
        for (let i = 0; i < listYear.length; i++) {
            // fied của cột
            let fied = grid.columns[count].field;
            $("#gridReportTotalPaymentForYear thead").find("[data-field='" + fied + "'] .k-link").html(listYear[i]);
            count++;
        }

        // Show column
        for (let i = 1; i < 6; i++) {
            grid.showColumn(i);
        }
        // hide column
        for (let i = 5; i > count - 1; i--) {
            grid.hideColumn(i);
        }
    }

    function onDataReportTypeID(arg) {

        let value = localStorage.reportTypeLS;
        if (value != undefined) {

            reportTypeID = value;

            // Change giá trị cho group radio
            switch (value) {
                case '0':
                    $('#DABReportBody_0').prop('checked', true);
                    break;
                case '1':
                    $('#DAMReportBody_1').prop('checked', true);
                    break;
                default:
                    $('#TotalReportBody_2').prop('checked', true);
            }
        }

        return {
            reportTypeID: reportTypeID
        };
    }

    // Change radio
    $("input[name='reportDate']").change(function () {

        localStorage.removeItem('reportTypeLS');
        let reportTypeLS = $('input[name="reportDate"]:checked').val();
        localStorage.reportTypeLS = reportTypeLS;
        // Do something interesting here
    });
</script>

<style>
    tr.k-grouping-row {
        display: none;
    }
</style>
